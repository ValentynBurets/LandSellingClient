{"ast":null,"code":"import axios from \"axios\";\nconst AuthorizeService = {\n  request: function (userData, url) {\n    return axios({\n      url: url,\n      method: \"POST\",\n      data: userData,\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => {\n      if (response.status === 202) {\n        return {\n          authorize: true,\n          token: response.data.token,\n          message: response.status\n        };\n      } else {\n        return {\n          authorize: false,\n          token: \"\",\n          message: response.status\n        };\n      }\n    }).catch(error => {\n      return {\n        authorize: false,\n        token: \"\",\n        message: error.toString()\n      };\n    });\n  }\n};\nexport default AuthorizeService;","map":{"version":3,"sources":["C:/Users/Valentyn/study/graduate work/LandSellingWebsite/LandSellingWebsite/ClientApp/client_app/src/Pages/StartPage/Services/AuthorizeService.js"],"names":["axios","AuthorizeService","request","userData","url","method","data","headers","then","response","status","authorize","token","message","catch","error","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,OAAO,EAAE,UAAUC,QAAV,EAAoBC,GAApB,EAAyB;AAC9B,WAAOJ,KAAK,CAAC;AACTI,MAAAA,GAAG,EAAEA,GADI;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTC,MAAAA,IAAI,EAAEH,QAHG;AAITI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAJA,KAAD,CAAL,CAOJC,IAPI,CAOEC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAO;AAAEC,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,KAAK,EAAEH,QAAQ,CAACH,IAAT,CAAcM,KAAxC;AAA+CC,UAAAA,OAAO,EAAEJ,QAAQ,CAACC;AAAjE,SAAP;AACH,OAFD,MAGK;AACD,eAAO;AAAEC,UAAAA,SAAS,EAAE,KAAb;AAAoBC,UAAAA,KAAK,EAAE,EAA3B;AAA+BC,UAAAA,OAAO,EAAEJ,QAAQ,CAACC;AAAjD,SAAP;AACH;AACJ,KAdM,EAcJI,KAdI,CAcGC,KAAD,IAAW;AAChB,aAAO;AAAEJ,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,KAAK,EAAE,EAA3B;AAA+BC,QAAAA,OAAO,EAAEE,KAAK,CAACC,QAAN;AAAxC,OAAP;AACH,KAhBM,CAAP;AAiBH;AAnBoB,CAAzB;AAsBA,eAAef,gBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst AuthorizeService = {\r\n    request: function (userData, url) {\r\n        return axios({\r\n            url: url,\r\n            method: \"POST\",\r\n            data: userData,\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 202) {\r\n                return { authorize: true, token: response.data.token, message: response.status };\r\n            }\r\n            else {\r\n                return { authorize: false, token: \"\", message: response.status };\r\n            }\r\n        }).catch((error) => {\r\n            return { authorize: false, token: \"\", message: error.toString() };\r\n        });\r\n    }\r\n}\r\n\r\nexport default AuthorizeService;"]},"metadata":{},"sourceType":"module"}