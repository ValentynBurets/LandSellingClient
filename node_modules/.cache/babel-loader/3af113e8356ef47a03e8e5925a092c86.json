{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Valentyn\\\\study\\\\graduate work\\\\LandSellingWebsite\\\\LandSellingWebsite\\\\ClientApp\\\\client_app\\\\src\\\\Pages\\\\MainPages\\\\BuildingRentPage\\\\BuildingRent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'; //import OneItemSelector from '../Components/OneItemSelector'\n//import RangeSelectorElement from '../Components/RangeSelectorElement'\n//import MultiItemSelector from '../Components/MultiItemSelector'\n\nimport LotCardsDeck from '../Components/LotCardsDeck'; //import LotCard from '../Components/LotCard'\n\nimport RentSortType from './RentSortType';\nimport http from '../../../http-common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BuildingRent() {\n  _s();\n\n  //let sortedLots = new\n  const [lots, setLots] = useState({\n    isLoading: true,\n    lotsData: null\n  }); // const [sort, setSort] = useState()\n\n  useEffect(() => {\n    http.get('/Lot').then(responce => {\n      var data = responce.data;\n\n      if (data != null) {\n        setLots({\n          isLoading: false,\n          lotsData: data\n        });\n      } else {\n        setLots({\n          isLoading: false,\n          lotsData: Array.from(data)\n        });\n      }\n    }).catch(e => {\n      setLots({\n        isLoading: false,\n        lotsData: null\n      });\n      console.log(e);\n    }); //console.log(typeof lots.lotsData)\n  }, [setLots]);\n\n  var get = () => {\n    http.get(`/RentHouses?sorted=true&sortType=${sortType22}`).then(responce => {\n      var data = responce.data;\n\n      if (data != null) {\n        setLots({\n          isLoading: false,\n          lotsData: data\n        });\n      } else {\n        setLots({\n          isLoading: false,\n          lotsData: Array.from(data)\n        });\n      }\n\n      console.log(responce);\n    }).catch(e => {\n      setLots({\n        isLoading: false,\n        lotsData: null\n      });\n      console.log(e);\n    });\n    console.log(lots);\n  }; // let handleSort = (e) => {\n  //   this.setState({ sort: e.target.value })\n  // }\n\n\n  var getRows = () => {\n    if (lots.lotsData != null && !lots.isLoading) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(LotCardsDeck, {\n            id: \"lots-list\",\n            postArray: lots.lotsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this);\n  }; // let handleCitySelect = (e) => {\n  //   this.setState({ city: e.target.value })\n  //   console.log(e.target.value)\n  // }\n\n\n  const [sortType22, setSortType] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      borderStyle: \"solid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center m-4\",\n        children: \"ALL OFFERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          textAlign: 'center',\n          display: 'block'\n        },\n        className: \"text m-4\",\n        children: \"\\\"Choose your best house and live happy! :)))\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"City\",\n        \"aria-label\": \"Default select example\",\n        onChange: () => {\n          setSortType(RentSortType.City);\n          get();\n        },\n        style: {\n          float: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Name\",\n          select: true,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"High-to-low\",\n          children: \"From high to low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Low-to-high\",\n          children: \"From low to high\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), getRows()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(BuildingRent, \"39QwsiqOUb9fQcNVTwLNT0lRpAk=\");\n\n_c = BuildingRent;\nexport default BuildingRent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuildingRent\");","map":{"version":3,"sources":["C:/Users/Valentyn/study/graduate work/LandSellingWebsite/LandSellingWebsite/ClientApp/client_app/src/Pages/MainPages/BuildingRentPage/BuildingRent.js"],"names":["React","useEffect","useState","Container","Row","Col","LotCardsDeck","RentSortType","http","BuildingRent","lots","setLots","isLoading","lotsData","get","then","responce","data","Array","from","catch","e","console","log","sortType22","getRows","setSortType","textAlign","display","City","float"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n//import OneItemSelector from '../Components/OneItemSelector'\r\n//import RangeSelectorElement from '../Components/RangeSelectorElement'\r\n//import MultiItemSelector from '../Components/MultiItemSelector'\r\nimport LotCardsDeck from '../Components/LotCardsDeck'\r\n//import LotCard from '../Components/LotCard'\r\nimport RentSortType from './RentSortType'\r\n\r\nimport http from '../../../http-common'\r\n\r\nfunction BuildingRent() {\r\n  //let sortedLots = new\r\n\r\n  const [lots, setLots] = useState({\r\n    isLoading: true,\r\n    lotsData: null,\r\n  })\r\n\r\n // const [sort, setSort] = useState()\r\n\r\n  useEffect(() => {\r\n    http\r\n      .get('/Lot')\r\n      .then((responce) => {\r\n        var data = responce.data\r\n        if (data != null) {\r\n          setLots({ isLoading: false, lotsData: data })\r\n        } else {\r\n          setLots({\r\n            isLoading: false,\r\n            lotsData: Array.from(data),\r\n          })\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLots({ isLoading: false, lotsData: null })\r\n        console.log(e)\r\n      })\r\n    //console.log(typeof lots.lotsData)\r\n  }, [setLots])\r\n  var get = ()=> {http\r\n      .get(`/RentHouses?sorted=true&sortType=${sortType22}`)\r\n      .then((responce) => {\r\n        var data = responce.data\r\n        if (data != null) {\r\n          setLots({ isLoading: false, lotsData: data })\r\n        } else {\r\n          setLots({\r\n            isLoading: false,\r\n            lotsData: Array.from(data),\r\n          })\r\n        }\r\n        console.log(responce);\r\n      })\r\n      .catch((e) => {\r\n        setLots({ isLoading: false, lotsData: null })\r\n        console.log(e)\r\n      })\r\n    console.log(lots)\r\n    }\r\n\r\n\r\n  // let handleSort = (e) => {\r\n  //   this.setState({ sort: e.target.value })\r\n  // }\r\nvar getRows = ()=>{\r\n    if(lots.lotsData != null && !lots.isLoading){\r\n      return <Row>\r\n      <Col lg={9}>\r\n        <LotCardsDeck id='lots-list' postArray={lots.lotsData} />\r\n      </Col>\r\n    </Row>\r\n  }\r\n  return <Container></Container>}\r\n  // let handleCitySelect = (e) => {\r\n  //   this.setState({ city: e.target.value })\r\n  //   console.log(e.target.value)\r\n  // }\r\n   const [sortType22, setSortType] = useState(null);\r\n  return (\r\n    <>\r\n      <Container borderStyle='solid'>\r\n        <h2 className='text-center m-4'>ALL OFFERS</h2>\r\n        <label\r\n          style={{ textAlign: 'center', display: 'block' }}\r\n          className='text m-4'\r\n        >\r\n          \"Choose your best house and live happy! :)))\"\r\n        </label>\r\n        <select\r\n          defaultValue='City'\r\n          aria-label='Default select example'\r\n          onChange={()=>{\r\n            setSortType(RentSortType.City);\r\n            get()}\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <option value='Name' select>\r\n            Name\r\n          </option>\r\n          <option value='High-to-low'>From high to low</option>\r\n          <option value='Low-to-high'>From low to high</option>\r\n        </select>\r\n        <h6>Filters:</h6>\r\n         {getRows()}\r\n      </Container>\r\n    </>\r\n  )\r\n        }\r\nexport default BuildingRent\r\n"]},"metadata":{},"sourceType":"module"}