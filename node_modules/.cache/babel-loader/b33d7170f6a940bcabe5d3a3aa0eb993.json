{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Valentyn\\\\study\\\\graduate work\\\\LandSellingWebsite\\\\LandSellingWebsite\\\\ClientApp\\\\client_app\\\\src\\\\Pages\\\\StartPage\\\\Component\\\\RegisterForm\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport \"../AuthorizeBox.sass\";\nimport resources from \"../../../../../../jsonData/English/StartPage.json\";\nimport connection from \"../../../../../../jsonData/ConnectionConfig.json\";\nimport { React, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport AuthorizeService from \"../../Services/AuthorizeService\";\nimport { useAuth } from \"../../../../Components/Services/AuthProvider/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  const currentHistory = useHistory();\n  const {\n    login\n  } = useAuth();\n  const [formState, setFormState] = useState({\n    name: \"\",\n    surname: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    passwordVisible: false,\n    validated: false,\n    authorizedState: false,\n    authorizedMessage: \"\",\n    errorMessage: \"\"\n  });\n  const nameValidPattern = \"[а-яА-ЯёЁіІїЇєЄa-zA-Z]{2,20}$\";\n  const surnameValidPattern = \"[а-яА-ЯёЁіІїЇєЄa-zA-Z]{2,20}$\";\n  const phoneValidPattern = \"^\\\\+380[0-9]{9}$\";\n  const passwordValidPattern = \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}:;<>,.?~_+-=|]).{10,25}$\";\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setFormState(prev => {\n      return { ...prev,\n        validated: true\n      };\n    });\n    const isFormValid = event.currentTarget.checkValidity();\n\n    if (isFormValid) {\n      const userData = {\n        firstName: formState.name,\n        lastName: formState.surname,\n        phoneNumber: formState.phone,\n        email: formState.email,\n        password: formState.password\n      };\n      AuthorizeService.request(userData, connection.ServerUrl + connection.Routes.RegisterCustomer).then(response => {\n        if (response.authorize === true) {\n          // Set jwt token\n          localStorage.setItem(\"token\", response.token);\n          login();\n          currentHistory.push(\"/new_order\");\n        } else {\n          let error = resources.AuthorizeBox.RegisterTab.ErrorText.IncorrectData;\n          setFormState(prev => {\n            return { ...prev,\n              authorizedState: response.authorize,\n              authorizedMessage: response.message,\n              errorMessage: error\n            };\n          });\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    validated: formState.validated,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message-box\",\n      style: {\n        visibility: Boolean(formState.errorMessage) ? \"visible\" : \"hidden\"\n      },\n      children: formState.errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"userName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: resources.AuthorizeBox.RegisterTab.Labels.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: formState.name,\n          onChange: event => setFormState(prev => {\n            return { ...prev,\n              name: event.target.value\n            };\n          }),\n          className: \"ig-form-control\",\n          type: \"text\",\n          placeholder: resources.AuthorizeBox.RegisterTab.Placeholders.Name,\n          pattern: nameValidPattern,\n          maxLength: 20,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: resources.AuthorizeBox.RegisterTab.InvalidText.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"userSurname\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: resources.AuthorizeBox.RegisterTab.Labels.Surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: formState.surname,\n          onChange: event => setFormState(prev => {\n            return { ...prev,\n              surname: event.target.value\n            };\n          }),\n          className: \"ig-form-control\",\n          type: \"text\",\n          placeholder: resources.AuthorizeBox.RegisterTab.Placeholders.Surname,\n          pattern: surnameValidPattern,\n          maxLength: 20,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: resources.AuthorizeBox.RegisterTab.InvalidText.Surname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"userPhone\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: resources.AuthorizeBox.RegisterTab.Labels.Phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: formState.phone,\n          onChange: event => setFormState(prev => {\n            return { ...prev,\n              phone: event.target.value\n            };\n          }),\n          className: \"ig-form-control\",\n          type: \"text\",\n          placeholder: resources.AuthorizeBox.RegisterTab.Placeholders.Phone,\n          pattern: phoneValidPattern,\n          maxLength: 13\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: resources.AuthorizeBox.RegisterTab.InvalidText.Phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"userEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: resources.AuthorizeBox.RegisterTab.Labels.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: formState.email,\n          onChange: event => setFormState(prev => {\n            return { ...prev,\n              email: event.target.value\n            };\n          }),\n          className: \"ig-form-control\",\n          type: \"email\",\n          placeholder: resources.AuthorizeBox.RegisterTab.Placeholders.Email,\n          maxLength: 30,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: resources.AuthorizeBox.RegisterTab.InvalidText.Email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"userPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: resources.AuthorizeBox.RegisterTab.Labels.Password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: formState.password,\n          onChange: event => setFormState(prev => {\n            return { ...prev,\n              password: event.target.value\n            };\n          }),\n          className: \"ig-form-control\",\n          type: formState.passwordVisible === true ? \"text\" : \"password\",\n          placeholder: resources.AuthorizeBox.RegisterTab.Placeholders.Password,\n          pattern: passwordValidPattern,\n          maxLength: 30,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => setFormState(prev => {\n            return { ...prev,\n              passwordVisible: !prev.passwordVisible\n            };\n          }),\n          class: formState.passwordVisible ? \"bi bi-eye fs-4 eye-icon\" : \"bi bi-eye-slash fs-4 eye-icon\",\n          style: {\n            marginLeft: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: resources.AuthorizeBox.RegisterTab.InvalidText.Password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"text-center mt-3\",\n      controlId: \"submitButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"submit-button\",\n        children: resources.AuthorizeBox.RegisterTab.ButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterForm, \"kEvDOOfDqhEMhJcHUXLdHtDc3GI=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/Valentyn/study/graduate work/LandSellingWebsite/LandSellingWebsite/ClientApp/client_app/src/Pages/StartPage/Component/RegisterForm/RegisterForm.js"],"names":["resources","connection","React","useState","useHistory","Form","Button","InputGroup","AuthorizeService","useAuth","RegisterForm","currentHistory","login","formState","setFormState","name","surname","phone","email","password","passwordVisible","validated","authorizedState","authorizedMessage","errorMessage","nameValidPattern","surnameValidPattern","phoneValidPattern","passwordValidPattern","handleSubmit","event","preventDefault","prev","isFormValid","currentTarget","checkValidity","userData","firstName","lastName","phoneNumber","request","ServerUrl","Routes","RegisterCustomer","then","response","authorize","localStorage","setItem","token","push","error","AuthorizeBox","RegisterTab","ErrorText","IncorrectData","message","visibility","Boolean","Labels","Name","target","value","Placeholders","InvalidText","Surname","Phone","Email","Password","marginLeft","ButtonText"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,OAAOA,SAAP,MAAsB,mDAAtB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,iBAAzC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,OAAT,QAAwB,2DAAxB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAMC,cAAc,GAAGP,UAAU,EAAjC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAYH,OAAO,EAAzB;AAEA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AACvCY,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,OAAO,EAAE,EAF8B;AAGvCC,IAAAA,KAAK,EAAE,EAHgC;AAIvCC,IAAAA,KAAK,EAAE,EAJgC;AAKvCC,IAAAA,QAAQ,EAAE,EAL6B;AAMvCC,IAAAA,eAAe,EAAE,KANsB;AAOvCC,IAAAA,SAAS,EAAE,KAP4B;AAQvCC,IAAAA,eAAe,EAAE,KARsB;AASvCC,IAAAA,iBAAiB,EAAE,EAToB;AAUvCC,IAAAA,YAAY,EAAE;AAVyB,GAAD,CAA1C;AAaA,QAAMC,gBAAgB,GAAG,+BAAzB;AACA,QAAMC,mBAAmB,GAAG,+BAA5B;AACA,QAAMC,iBAAiB,GAAG,kBAA1B;AACA,QAAMC,oBAAoB,GAAG,6EAA7B;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AAEAjB,IAAAA,YAAY,CAACkB,IAAI,IAAI;AAAE,aAAO,EAAE,GAAGA,IAAL;AAAWX,QAAAA,SAAS,EAAE;AAAtB,OAAP;AAAqC,KAAhD,CAAZ;AAEA,UAAMY,WAAW,GAAGH,KAAK,CAACI,aAAN,CAAoBC,aAApB,EAApB;;AAEA,QAAIF,WAAJ,EAAiB;AACb,YAAMG,QAAQ,GAAG;AACbC,QAAAA,SAAS,EAAExB,SAAS,CAACE,IADR;AAEbuB,QAAAA,QAAQ,EAAEzB,SAAS,CAACG,OAFP;AAGbuB,QAAAA,WAAW,EAAE1B,SAAS,CAACI,KAHV;AAIbC,QAAAA,KAAK,EAAEL,SAAS,CAACK,KAJJ;AAKbC,QAAAA,QAAQ,EAAEN,SAAS,CAACM;AALP,OAAjB;AAQAX,MAAAA,gBAAgB,CAACgC,OAAjB,CAAyBJ,QAAzB,EAAmCnC,UAAU,CAACwC,SAAX,GAAuBxC,UAAU,CAACyC,MAAX,CAAkBC,gBAA5E,EAA8FC,IAA9F,CAAmGC,QAAQ,IAAI;AAC3G,YAAIA,QAAQ,CAACC,SAAT,KAAuB,IAA3B,EAAiC;AAC7B;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACI,KAAvC;AAEArC,UAAAA,KAAK;AAELD,UAAAA,cAAc,CAACuC,IAAf,CAAoB,YAApB;AACH,SAPD,MAQK;AACD,cAAIC,KAAK,GAAGnD,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CC,aAAzD;AAEAzC,UAAAA,YAAY,CAACkB,IAAI,IAAI;AACjB,mBAAO,EACH,GAAGA,IADA;AAEHV,cAAAA,eAAe,EAAEuB,QAAQ,CAACC,SAFvB;AAGHvB,cAAAA,iBAAiB,EAAEsB,QAAQ,CAACW,OAHzB;AAIHhC,cAAAA,YAAY,EAAE2B;AAJX,aAAP;AAMH,WAPW,CAAZ;AAQH;AACJ,OArBD;AAsBH;AACJ;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEtC,SAAS,CAACQ,SAAtC;AAAiD,IAAA,QAAQ,EAAEQ,YAA3D;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE;AAAE4B,QAAAA,UAAU,EAAEC,OAAO,CAAC7C,SAAS,CAACW,YAAX,CAAP,GAAkC,SAAlC,GAA8C;AAA5D,OAA1C;AAAA,gBACKX,SAAS,CAACW;AADf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,UAAvC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaxB,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCM,MAAnC,CAA0CC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,EAAE/C,SAAS,CAACE,IAA/B;AAAqC,UAAA,QAAQ,EAAGe,KAAD,IAAWhB,YAAY,CAACkB,IAAI,IAAI;AAAE,mBAAO,EAAE,GAAGA,IAAL;AAAWjB,cAAAA,IAAI,EAAEe,KAAK,CAAC+B,MAAN,CAAaC;AAA9B,aAAP;AAA+C,WAA1D,CAAtE;AACI,UAAA,SAAS,EAAC,iBADd;AACgC,UAAA,IAAI,EAAC,MADrC;AAC4C,UAAA,WAAW,EAAE9D,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCU,YAAnC,CAAgDH,IADzG;AAEI,UAAA,OAAO,EAAEnC,gBAFb;AAE+B,UAAA,SAAS,EAAE,EAF1C;AAE8C,UAAA,QAAQ;AAFtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA,oBAAwCzB,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCW,WAAnC,CAA+CJ;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,aAAvC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAa5D,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCM,MAAnC,CAA0CM;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,EAAEpD,SAAS,CAACG,OAA/B;AAAwC,UAAA,QAAQ,EAAGc,KAAD,IAAWhB,YAAY,CAACkB,IAAI,IAAI;AAAE,mBAAO,EAAE,GAAGA,IAAL;AAAWhB,cAAAA,OAAO,EAAEc,KAAK,CAAC+B,MAAN,CAAaC;AAAjC,aAAP;AAAkD,WAA7D,CAAzE;AACI,UAAA,SAAS,EAAC,iBADd;AACgC,UAAA,IAAI,EAAC,MADrC;AAC4C,UAAA,WAAW,EAAE9D,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCU,YAAnC,CAAgDE,OADzG;AAEI,UAAA,OAAO,EAAEvC,mBAFb;AAEkC,UAAA,SAAS,EAAE,EAF7C;AAEiD,UAAA,QAAQ;AAFzD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA,oBAAwC1B,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCW,WAAnC,CAA+CC;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAyBI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,WAAvC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAajE,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCM,MAAnC,CAA0CO;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,EAAErD,SAAS,CAACI,KAA/B;AAAsC,UAAA,QAAQ,EAAGa,KAAD,IAAWhB,YAAY,CAACkB,IAAI,IAAI;AAAE,mBAAO,EAAE,GAAGA,IAAL;AAAWf,cAAAA,KAAK,EAAEa,KAAK,CAAC+B,MAAN,CAAaC;AAA/B,aAAP;AAAgD,WAA3D,CAAvE;AACI,UAAA,SAAS,EAAC,iBADd;AACgC,UAAA,IAAI,EAAC,MADrC;AAC4C,UAAA,WAAW,EAAE9D,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCU,YAAnC,CAAgDG,KADzG;AACgH,UAAA,OAAO,EAAEvC,iBADzH;AAEI,UAAA,SAAS,EAAE;AAFf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA,oBAAuC3B,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCW,WAAnC,CAA+CE;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,eAmCI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,WAAvC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAalE,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCM,MAAnC,CAA0CQ;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,EAAEtD,SAAS,CAACK,KAA/B;AAAsC,UAAA,QAAQ,EAAGY,KAAD,IAAWhB,YAAY,CAACkB,IAAI,IAAI;AAAE,mBAAO,EAAE,GAAGA,IAAL;AAAWd,cAAAA,KAAK,EAAEY,KAAK,CAAC+B,MAAN,CAAaC;AAA/B,aAAP;AAAgD,WAA3D,CAAvE;AACI,UAAA,SAAS,EAAC,iBADd;AACgC,UAAA,IAAI,EAAC,OADrC;AAC6C,UAAA,WAAW,EAAE9D,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCU,YAAnC,CAAgDI,KAD1G;AACiH,UAAA,SAAS,EAAE,EAD5H;AACgI,UAAA,QAAQ;AADxI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA,oBAAuCnE,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCW,WAAnC,CAA+CG;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCJ,eA4CI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,cAAvC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAanE,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCM,MAAnC,CAA0CS;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,EAAEvD,SAAS,CAACM,QAA/B;AAAyC,UAAA,QAAQ,EAAGW,KAAD,IAAWhB,YAAY,CAACkB,IAAI,IAAI;AAAE,mBAAO,EAAE,GAAGA,IAAL;AAAWb,cAAAA,QAAQ,EAAEW,KAAK,CAAC+B,MAAN,CAAaC;AAAlC,aAAP;AAAmD,WAA9D,CAA1E;AACI,UAAA,SAAS,EAAC,iBADd;AACgC,UAAA,IAAI,EAAEjD,SAAS,CAACO,eAAV,KAA8B,IAA9B,GAAqC,MAArC,GAA8C,UADpF;AAEI,UAAA,WAAW,EAAEpB,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCU,YAAnC,CAAgDK,QAFjE;AAE2E,UAAA,OAAO,EAAExC,oBAFpF;AAE0G,UAAA,SAAS,EAAE,EAFrH;AAEyH,UAAA,QAAQ;AAFjI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIS;AAAG,UAAA,OAAO,EAAE,MAAMd,YAAY,CAACkB,IAAI,IAAI;AAAE,mBAAO,EAAE,GAAGA,IAAL;AAAWZ,cAAAA,eAAe,EAAE,CAAEY,IAAI,CAACZ;AAAnC,aAAP;AAA8D,WAAzE,CAA9B;AAA0G,UAAA,KAAK,EAAGP,SAAS,CAACO,eAAV,GAA4B,yBAA5B,GAAwD,+BAA1K;AAA2M,UAAA,KAAK,EAAE;AAACiD,YAAAA,UAAU,EAAC;AAAZ;AAAlN;AAAA;AAAA;AAAA;AAAA,gBAJT,eAKI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA,oBAAuCrE,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCW,WAAnC,CAA+CI;AAAtF;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CJ,eA6DI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,kBAAtB;AAAyC,MAAA,SAAS,EAAC,cAAnD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,eAAlD;AAAA,kBAAmEpE,SAAS,CAACoD,YAAV,CAAuBC,WAAvB,CAAmCiB;AAAtG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7DJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmEH;;GAnIQ5D,Y;UAEkBN,U,EACLK,O;;;KAHbC,Y;AAqIT,eAAeA,YAAf","sourcesContent":["import \"../AuthorizeBox.sass\";\r\nimport resources from \"../../../../../../jsonData/English/StartPage.json\";\r\nimport connection from \"../../../../../../jsonData/ConnectionConfig.json\";\r\nimport { React, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport AuthorizeService from \"../../Services/AuthorizeService\";\r\nimport { useAuth } from \"../../../../Components/Services/AuthProvider/AuthProvider\";\r\n\r\nfunction RegisterForm() {\r\n\r\n    const currentHistory = useHistory();\r\n    const { login } = useAuth();\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordVisible: false,\r\n        validated: false,\r\n        authorizedState: false,\r\n        authorizedMessage: \"\",\r\n        errorMessage: \"\"\r\n    });\r\n\r\n    const nameValidPattern = \"[а-яА-ЯёЁіІїЇєЄa-zA-Z]{2,20}$\";\r\n    const surnameValidPattern = \"[а-яА-ЯёЁіІїЇєЄa-zA-Z]{2,20}$\";\r\n    const phoneValidPattern = \"^\\\\+380[0-9]{9}$\";\r\n    const passwordValidPattern = \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}:;<>,.?~_+-=|]).{10,25}$\";\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setFormState(prev => { return { ...prev, validated: true } });\r\n\r\n        const isFormValid = event.currentTarget.checkValidity();\r\n\r\n        if (isFormValid) {\r\n            const userData = {\r\n                firstName: formState.name,\r\n                lastName: formState.surname,\r\n                phoneNumber: formState.phone,\r\n                email: formState.email,\r\n                password: formState.password\r\n            }\r\n\r\n            AuthorizeService.request(userData, connection.ServerUrl + connection.Routes.RegisterCustomer).then(response => {\r\n                if (response.authorize === true) {\r\n                    // Set jwt token\r\n                    localStorage.setItem(\"token\", response.token);\r\n\r\n                    login();\r\n\r\n                    currentHistory.push(\"/new_order\");\r\n                }\r\n                else {\r\n                    let error = resources.AuthorizeBox.RegisterTab.ErrorText.IncorrectData;\r\n\r\n                    setFormState(prev => {\r\n                        return {\r\n                            ...prev,\r\n                            authorizedState: response.authorize,\r\n                            authorizedMessage: response.message,\r\n                            errorMessage: error\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form noValidate validated={formState.validated} onSubmit={handleSubmit}>\r\n            {/* Display this block if errorMessage not empty */}\r\n            <div className=\"error-message-box\" style={{ visibility: Boolean(formState.errorMessage) ? \"visible\" : \"hidden\" }}>\r\n                {formState.errorMessage}</div>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"userName\">\r\n                <Form.Label>{resources.AuthorizeBox.RegisterTab.Labels.Name}</Form.Label>\r\n                <InputGroup>\r\n                    <Form.Control value={formState.name} onChange={(event) => setFormState(prev => { return { ...prev, name: event.target.value }; })}\r\n                        className=\"ig-form-control\" type=\"text\" placeholder={resources.AuthorizeBox.RegisterTab.Placeholders.Name}\r\n                        pattern={nameValidPattern} maxLength={20} required />\r\n                    <Form.Control.Feedback type=\"invalid\" >{resources.AuthorizeBox.RegisterTab.InvalidText.Name}</Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"userSurname\">\r\n                <Form.Label>{resources.AuthorizeBox.RegisterTab.Labels.Surname}</Form.Label>\r\n                <InputGroup>\r\n                    <Form.Control value={formState.surname} onChange={(event) => setFormState(prev => { return { ...prev, surname: event.target.value }; })}\r\n                        className=\"ig-form-control\" type=\"text\" placeholder={resources.AuthorizeBox.RegisterTab.Placeholders.Surname}\r\n                        pattern={surnameValidPattern} maxLength={20} required />\r\n                    <Form.Control.Feedback type=\"invalid\" >{resources.AuthorizeBox.RegisterTab.InvalidText.Surname}</Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"userPhone\">\r\n                <Form.Label>{resources.AuthorizeBox.RegisterTab.Labels.Phone}</Form.Label>\r\n                <InputGroup>\r\n                    <Form.Control value={formState.phone} onChange={(event) => setFormState(prev => { return { ...prev, phone: event.target.value }; })}\r\n                        className=\"ig-form-control\" type=\"text\" placeholder={resources.AuthorizeBox.RegisterTab.Placeholders.Phone} pattern={phoneValidPattern}\r\n                        maxLength={13} />\r\n                    <Form.Control.Feedback type=\"invalid\">{resources.AuthorizeBox.RegisterTab.InvalidText.Phone}</Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"userEmail\">\r\n                <Form.Label>{resources.AuthorizeBox.RegisterTab.Labels.Email}</Form.Label>\r\n                <InputGroup>\r\n                    <Form.Control value={formState.email} onChange={(event) => setFormState(prev => { return { ...prev, email: event.target.value }; })}\r\n                        className=\"ig-form-control\" type=\"email\" placeholder={resources.AuthorizeBox.RegisterTab.Placeholders.Email} maxLength={30} required />\r\n                    <Form.Control.Feedback type=\"invalid\">{resources.AuthorizeBox.RegisterTab.InvalidText.Email}</Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-4\" controlId=\"userPassword\">\r\n                <Form.Label>{resources.AuthorizeBox.RegisterTab.Labels.Password}</Form.Label>\r\n                <InputGroup>\r\n                    <Form.Control value={formState.password} onChange={(event) => setFormState(prev => { return { ...prev, password: event.target.value }; })}\r\n                        className=\"ig-form-control\" type={formState.passwordVisible === true ? \"text\" : \"password\"}\r\n                        placeholder={resources.AuthorizeBox.RegisterTab.Placeholders.Password} pattern={passwordValidPattern} maxLength={30} required />\r\n                         <i onClick={() => setFormState(prev => { return { ...prev, passwordVisible: !(prev.passwordVisible) } })} class={ formState.passwordVisible ? \"bi bi-eye fs-4 eye-icon\" : \"bi bi-eye-slash fs-4 eye-icon\"} style={{marginLeft:\"10px\"}}></i>\r\n                    <Form.Control.Feedback type=\"invalid\">{resources.AuthorizeBox.RegisterTab.InvalidText.Password}</Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n            {/* <Form.Group className=\"mb-4\" controlId=\"showPasswordButton\">\r\n                <Form.Text className=\"text-muted me-2\">{resources.AuthorizeBox.RegisterTab.Labels.ShowPasswordButton}</Form.Text>\r\n                <input value={formState.passwordVisible} onChange={() => setFormState(prev => { return { ...prev, passwordVisible: !(prev.passwordVisible) } })}\r\n                    type=\"checkbox\" />\r\n            </Form.Group> */}\r\n\r\n            <Form.Group className=\"text-center mt-3\" controlId=\"submitButton\">\r\n                <Button variant=\"primary\" type=\"submit\" className=\"submit-button\">{resources.AuthorizeBox.RegisterTab.ButtonText}</Button>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}