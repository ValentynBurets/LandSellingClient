{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vab\\\\source\\\\repos\\\\LandSellingWebsite\\\\LandSellingWebClient\\\\land-selling-web\\\\src\\\\Pages\\\\LotManagement\\\\NewLot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\nimport style from \"./NewLot.module.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewLot() {\n  var _ref, _ref2;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"OrderHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: TextData.NewOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"containerStyle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(UploadImage, {\n            fileString: product.fileString,\n            setFileString: value => {\n              setProductPicture(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"ServicesBox\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"HeaderText\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: TextData.Services\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(ProductDeck, {\n                items: services,\n                setItem: value => {\n                  setProductService(value);\n                },\n                buttonText: TextData.Select\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"AdditionalTextBlock\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                className: \"AdditionalTextL\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: TextData.Amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"numberInputStyle\",\n                    type: \"number\",\n                    id: \"amount\",\n                    name: \"amount\",\n                    min: \"1\",\n                    max: \"1000\",\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"AdditionalTextR\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"TotalPrice\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", productPrice ? (_ref = TextData.TotalPrice + productPrice + '$') !== null && _ref !== void 0 ? _ref : 'price' : TextData.SelectServiceAmount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"ProductButton\",\n            variant: \"primary\",\n            onClick: newOrder,\n            children: TextData.Create\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"ProductButton\",\n            variant: \"warning\",\n            onClick: addProduct,\n            children: TextData.AddProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"containerStyle CommentBlock\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"HeaderText CommentText\",\n              children: TextData.OptionalComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"Input InputAreaStyle\",\n              ref: commentTextArea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"ProductButtonDown\",\n              ref: targetComment,\n              variant: \"primary\",\n              onClick: addCommentHandleInputChange,\n              children: TextData.AddComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n              target: targetComment.current,\n              show: showComment,\n              placement: \"right\",\n              children: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n                id: \"overlay-example\",\n                ...props,\n                children: TextData.CommentAdded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ProductListStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HeaderText CommentText\",\n              children: TextData.ProductList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ProductDeck, {\n              items: myProductArray,\n              setItem: value => {\n                setCencelProduct(value);\n              },\n              buttonText: TextData.Cansel,\n              showImage: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"priceHeaderText\",\n              children: orderPrice ? (_ref2 = TextData.TotalPrice + orderPrice + '$') !== null && _ref2 !== void 0 ? _ref2 : 'price' : TextData.PleaseAddProduct\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = NewLot;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLot\");","map":{"version":3,"sources":["C:/Users/vab/source/repos/LandSellingWebsite/LandSellingWebClient/land-selling-web/src/Pages/LotManagement/NewLot.js"],"names":["React","useState","useEffect","Container","Col","Row","Button","Form","style","NewLot","data","isLoading","TextData","NewOrder","product","fileString","value","setProductPicture","Services","services","setProductService","Select","Amount","handleInputChange","productPrice","TotalPrice","SelectServiceAmount","newOrder","Create","addProduct","AddProduct","OptionalComment","commentTextArea","targetComment","addCommentHandleInputChange","AddComment","current","showComment","props","CommentAdded","ProductList","myProductArray","setCencelProduct","Cansel","orderPrice","PleaseAddProduct"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap'\r\nimport style from \"./NewLot.module.sass\"\r\n\r\nexport default function NewLot(){\r\n  \r\n  return(\r\n    <Container>\r\n    {(data.isLoading) ? (\r\n        <Loading/>\r\n    ) : (\r\n    <Container>\r\n\r\n        <Row className='OrderHeader'>\r\n            <div>{TextData.NewOrder}</div>    \r\n        </Row>\r\n\r\n        <Row className=\"containerStyle\">\r\n            <Col>\r\n                <UploadImage \r\n                    fileString = {product.fileString} \r\n                    setFileString={(value) => {setProductPicture(value)}}\r\n                />\r\n            </Col>\r\n            \r\n            <Col className=\"ServicesBox\">\r\n                <Container>\r\n                    <Row className='HeaderText'>\r\n                        <div >{TextData.Services}</div>\r\n                    </Row>\r\n                    \r\n                    <Row>\r\n                        <ProductDeck\r\n                            items={services} \r\n                            setItem={(value) => {setProductService(value)}}\r\n                            buttonText = {TextData.Select}\r\n                        />\r\n                    </Row>    \r\n                    <Row className='AdditionalTextBlock'>\r\n                        <Col className='AdditionalTextL'>\r\n                            <div>\r\n                                <label>{TextData.Amount}</label>\r\n                                <input \r\n                                   className=\"numberInputStyle\"\r\n                                    type=\"number\" \r\n                                    id=\"amount\" \r\n                                   name=\"amount\" \r\n                                   min=\"1\" max=\"1000\"\r\n                                   onChange={handleInputChange} \r\n                                /> \r\n                            </div>\r\n                        </Col>\r\n                        <Col className='AdditionalTextR'>\r\n                            <div className=\"TotalPrice\">\r\n                                <label> {productPrice \r\n                                    ? TextData.TotalPrice + productPrice + '$' ?? 'price' \r\n                                    : TextData.SelectServiceAmount}\r\n                                </label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col>\r\n                <Button className='ProductButton' variant='primary' onClick={newOrder}>\r\n                    {TextData.Create}\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <Button className='ProductButton' variant='warning' onClick={addProduct}>\r\n                    {TextData.AddProduct}\r\n                </Button>\r\n\r\n                \r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col>\r\n        <div className=\"containerStyle CommentBlock\">\r\n            <label className=\"HeaderText CommentText\" >{TextData.OptionalComment}</label>\r\n\r\n            <textarea className=\"Input InputAreaStyle\" ref={commentTextArea}/>\r\n\r\n            <Button className='ProductButtonDown' ref={targetComment} variant='primary' \r\n                onClick={addCommentHandleInputChange}>\r\n                {TextData.AddComment}\r\n            </Button>\r\n\r\n            <Overlay target={targetComment.current} show={showComment} placement=\"right\">\r\n                {(props) => (\r\n                   <Tooltip id=\"overlay-example\" {...props}>\r\n                    {TextData.CommentAdded}\r\n                   </Tooltip>\r\n                 )}\r\n            </Overlay>    \r\n        </div>\r\n        </Col>\r\n\r\n        <Col >\r\n        <div className=\"ProductListStyle\">\r\n            <div className=\"HeaderText CommentText\">{TextData.ProductList}</div>    \r\n            <ProductDeck\r\n                items = {myProductArray}\r\n                setItem = {(value) => {setCencelProduct(value)}}\r\n                buttonText = {TextData.Cansel} \r\n                showImage = {true}\r\n            />\r\n\r\n            <div className='priceHeaderText'>\r\n                {orderPrice \r\n                    ? TextData.TotalPrice + orderPrice + '$' ?? 'price' \r\n                    : TextData.PleaseAddProduct}\r\n            </div>\r\n        </div>\r\n        </Col>\r\n        </Row>\r\n        \r\n    </Container>\r\n)}\r\n</Container>\r\n  )\r\n} "]},"metadata":{},"sourceType":"module"}