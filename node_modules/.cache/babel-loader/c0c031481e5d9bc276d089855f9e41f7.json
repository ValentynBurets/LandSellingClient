{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vab\\\\source\\\\repos\\\\LandSellingWebsite\\\\LandSellingWebClient\\\\land-selling-web\\\\src\\\\Pages\\\\LotManagement\\\\NewLot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Container, Col, Row, Button, Form } from \"react-bootstrap\";\nimport style from \"./NewLot.module.sass\";\nimport saveOrder from \"./Services/SaveOrder\";\nimport LoadServiceData from \"./Services/DataLoading\";\nimport { useHistory } from \"react-router-dom\";\nimport UploadImage from \"./Components/UploadImage\";\nimport TextData from \"../../Assets/jsonData/NewLotPage.json\";\nimport Spinner from \"react-bootstrap/spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewLot() {\n  _s();\n\n  let history = useHistory();\n  const [data, saveData] = useState({\n    isLoading: false,\n    requests: null,\n    inProgress: null\n  }); //#region\n  //current lot state\n\n  const lotInitialState = {\n    fileString: \"\"\n  };\n  const [lot, setLot] = useState(lotInitialState);\n\n  function setLotPicture(fileString) {\n    setLot(prevState => ({ ...prevState,\n      fileString\n    }));\n  }\n\n  function setLotService(selectedService) {\n    setLot(prevState => ({ ...prevState,\n      selectedService\n    }));\n  } //end current pruct state\n  //#endregion\n\n\n  const [mylotArray, updateMylotArray] = useState([]);\n  const [myCommentArray, updateMyCommentArray] = useState([]);\n  const commentTextArea = useRef(null);\n\n  function addCommentHandleInputChange(e) {\n    const value = commentTextArea.current.value;\n    updateMyCommentArray(value);\n  }\n\n  const setCencellot = lot => {\n    console.log(lot);\n    alert(\"delete lot\");\n    updateMylotArray(mylotArray.filter(item => item.id !== lot.id));\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setLot(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const addlot = () => {\n    updateMylotArray(arr => [...arr, {\n      id: \"id\" + Math.random().toString(16).slice(2),\n      picture: lot.fileString.toString(),\n      name: lot.selectedService.name\n    }]);\n  };\n\n  const newOrder = () => {\n    console.log(mylotArray);\n    saveOrder(mylotArray, myCommentArray);\n    history.push({\n      pathname: \"/order_list\"\n    });\n  };\n\n  const daysClickHandler = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"OrderHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: TextData.NewOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"containerStyle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(UploadImage, {\n            fileString: lot.fileString,\n            setFileString: value => {\n              setLotPicture(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"ServicesBox\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"HeaderText\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: TextData.Services\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                id: \"PriceCoefTable\",\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Days\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n                  text: \"Days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  onChange: daysClickHandler(this.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"AdditionalTextBlock\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"AdditionalTextL\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: TextData.Amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"numberInputStyle\",\n                    type: \"number\",\n                    id: \"amount\",\n                    name: \"amount\",\n                    min: \"1\",\n                    max: \"1000\",\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"lotButton\",\n            variant: \"primary\",\n            onClick: newOrder,\n            children: TextData.Create\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"lotButton\",\n            variant: \"warning\",\n            onClick: addlot,\n            children: TextData.Addlot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"containerStyle CommentBlock\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"HeaderText CommentText\",\n              children: TextData.OptionalComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"Input InputAreaStyle\",\n              ref: commentTextArea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"lotButtonDown\",\n              variant: \"primary\",\n              onClick: addCommentHandleInputChange,\n              children: TextData.AddComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lotListStyle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HeaderText CommentText\",\n              children: TextData.lotList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewLot, \"OfGeWwQZiyjDIlw7qr892RkCjsU=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewLot;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLot\");","map":{"version":3,"sources":["C:/Users/vab/source/repos/LandSellingWebsite/LandSellingWebClient/land-selling-web/src/Pages/LotManagement/NewLot.js"],"names":["React","useState","useEffect","useRef","Container","Col","Row","Button","Form","style","saveOrder","LoadServiceData","useHistory","UploadImage","TextData","Spinner","NewLot","history","data","saveData","isLoading","requests","inProgress","lotInitialState","fileString","lot","setLot","setLotPicture","prevState","setLotService","selectedService","mylotArray","updateMylotArray","myCommentArray","updateMyCommentArray","commentTextArea","addCommentHandleInputChange","e","value","current","setCencellot","console","log","alert","filter","item","id","handleInputChange","event","name","target","prev","addlot","arr","Math","random","toString","slice","picture","newOrder","push","pathname","daysClickHandler","NewOrder","Services","Amount","Create","Addlot","OptionalComment","AddComment","lotList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Col, Row, Button, Form } from \"react-bootstrap\";\r\nimport style from \"./NewLot.module.sass\";\r\nimport saveOrder from \"./Services/SaveOrder\";\r\nimport LoadServiceData from \"./Services/DataLoading\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadImage from \"./Components/UploadImage\";\r\nimport TextData from \"../../Assets/jsonData/NewLotPage.json\";\r\nimport Spinner from \"react-bootstrap/spinner\";\r\n\r\nexport default function NewLot() {\r\n  let history = useHistory();\r\n\r\n  const [data, saveData] = useState({\r\n    isLoading: false,\r\n    requests: null,\r\n    inProgress: null,\r\n  });\r\n\r\n  //#region\r\n  //current lot state\r\n\r\n  const lotInitialState = {\r\n    fileString: \"\",\r\n  };\r\n\r\n  const [lot, setLot] = useState(lotInitialState);\r\n\r\n  function setLotPicture(fileString) {\r\n    setLot((prevState) => ({ ...prevState, fileString }));\r\n  }\r\n  function setLotService(selectedService) {\r\n    setLot((prevState) => ({ ...prevState, selectedService }));\r\n  }\r\n  //end current pruct state\r\n  //#endregion\r\n\r\n  const [mylotArray, updateMylotArray] = useState([]);\r\n  const [myCommentArray, updateMyCommentArray] = useState([]);\r\n\r\n  const commentTextArea = useRef(null);\r\n\r\n  function addCommentHandleInputChange(e) {\r\n    const value = commentTextArea.current.value;\r\n    updateMyCommentArray(value);\r\n  }\r\n\r\n  const setCencellot = (lot) => {\r\n    console.log(lot);\r\n    alert(\"delete lot\");\r\n    updateMylotArray(mylotArray.filter((item) => item.id !== lot.id));\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLot((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addlot = () => {\r\n    updateMylotArray((arr) => [\r\n      ...arr,\r\n      {\r\n        id: \"id\" + Math.random().toString(16).slice(2),\r\n        picture: lot.fileString.toString(),\r\n        name: lot.selectedService.name,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const newOrder = () => {\r\n    console.log(mylotArray);\r\n    saveOrder(mylotArray, myCommentArray);\r\n    history.push({\r\n      pathname: \"/order_list\",\r\n    });\r\n  };\r\n\r\n  const daysClickHandler = (e) =>{\r\n    console.log(e)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {data.isLoading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"OrderHeader\">\r\n            <div>{TextData.NewOrder}</div>\r\n          </Row>\r\n\r\n          <Row className=\"containerStyle\">\r\n            <Col>\r\n              <UploadImage\r\n                fileString={lot.fileString}\r\n                setFileString={(value) => {\r\n                  setLotPicture(value);\r\n                }}\r\n              />\r\n            </Col>\r\n\r\n            <Col className=\"ServicesBox\">\r\n              <Container>\r\n                <Row className=\"HeaderText\">\r\n                  <div>{TextData.Services}</div>\r\n                </Row>\r\n                <Row>\r\n                  <table id=\"PriceCoefTable\">\r\n                    <tr>\r\n                      <th>Days</th>\r\n                      <th>Cost</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                  </table>\r\n                </Row>\r\n                <Row>\r\n                  <div>\r\n                    <lable text=\"Days\"/>\r\n                    <input type=\"number\" onChange={daysClickHandler(this.value)}/>\r\n                  </div>\r\n                </Row>\r\n                <Row className=\"AdditionalTextBlock\">\r\n                  <Col className=\"AdditionalTextL\">\r\n                    <div>\r\n                      <label>{TextData.Amount}</label>\r\n                      <input\r\n                        className=\"numberInputStyle\"\r\n                        type=\"number\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        min=\"1\"\r\n                        max=\"1000\"\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"lotButton\"\r\n                variant=\"primary\"\r\n                onClick={newOrder}\r\n              >\r\n                {TextData.Create}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button className=\"lotButton\" variant=\"warning\" onClick={addlot}>\r\n                {TextData.Addlot}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div className=\"containerStyle CommentBlock\">\r\n                <label className=\"HeaderText CommentText\">\r\n                  {TextData.OptionalComment}\r\n                </label>\r\n\r\n                <textarea\r\n                  className=\"Input InputAreaStyle\"\r\n                  ref={commentTextArea}\r\n                />\r\n\r\n                <Button\r\n                  className=\"lotButtonDown\"\r\n                  variant=\"primary\"\r\n                  onClick={addCommentHandleInputChange}\r\n                >\r\n                  {TextData.AddComment}\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col>\r\n              <div className=\"lotListStyle\">\r\n                <div className=\"HeaderText CommentText\">{TextData.lotList}</div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}