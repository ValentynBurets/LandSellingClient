{"ast":null,"code":"const encodeFile = (file, setFileString) => {\n  var reader = new FileReader(); //console.log(file)\n\n  if (file) {\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      let dataURI = reader.result;\n      let encodedFile = split(dataURI); //console.log(encodedFile);\n\n      setFileString(encodedFile);\n    };\n\n    reader.onerror = error => {\n      console.log(\"error: \", error);\n    };\n  }\n};\n\nconst split = string => {\n  const words = string.split('base64'); //console.log(words[1]);\n\n  return words[1].substring(1);\n};\n\nexport default encodeFile;","map":{"version":3,"sources":["C:/Users/vab/source/repos/LandSellingWebsite/LandSellingWebClient/land-selling-web/src/Pages/LotManagement/Services/encodeFile.js"],"names":["encodeFile","file","setFileString","reader","FileReader","readAsDataURL","onload","dataURI","result","encodedFile","split","onerror","error","console","log","string","words","substring"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,IAAD,EAAOC,aAAP,KAAyB;AAC1C,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb,CAD0C,CAEzC;;AACD,MAAIH,IAAJ,EAAU;AACNE,IAAAA,MAAM,CAACE,aAAP,CAAqBJ,IAArB;;AACAE,IAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AAClB,UAAIC,OAAO,GAAGJ,MAAM,CAACK,MAArB;AAEA,UAAIC,WAAW,GAAGC,KAAK,CAACH,OAAD,CAAvB,CAHkB,CAIlB;;AACAL,MAAAA,aAAa,CAACO,WAAD,CAAb;AACH,KAND;;AAOAN,IAAAA,MAAM,CAACQ,OAAP,GAAkBC,KAAD,IAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACH,KAFD;AAGH;AACF,CAhBD;;AAkBA,MAAMF,KAAK,GAAIK,MAAD,IAAW;AACvB,QAAMC,KAAK,GAAGD,MAAM,CAACL,KAAP,CAAa,QAAb,CAAd,CADuB,CAEvB;;AACA,SAAOM,KAAK,CAAC,CAAD,CAAL,CAASC,SAAT,CAAmB,CAAnB,CAAP;AACD,CAJD;;AAMA,eAAejB,UAAf","sourcesContent":["const encodeFile = (file, setFileString) => {\r\n  var reader = new FileReader();\r\n   //console.log(file)\r\n  if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n          let dataURI = reader.result;\r\n          \r\n          let encodedFile = split(dataURI)\r\n          //console.log(encodedFile);\r\n          setFileString(encodedFile);\r\n      };\r\n      reader.onerror = (error) => {\r\n          console.log(\"error: \", error);\r\n      };\r\n  }\r\n};\r\n\r\nconst split = (string) =>{\r\n  const words = string.split('base64');\r\n  //console.log(words[1]);\r\n  return words[1].substring(1);\r\n}\r\n\r\nexport default encodeFile"]},"metadata":{},"sourceType":"module"}