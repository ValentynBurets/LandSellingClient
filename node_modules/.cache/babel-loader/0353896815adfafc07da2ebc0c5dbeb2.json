{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Valentyn\\\\study\\\\graduate work\\\\LandSellingWebsite\\\\LandSellingWebsite\\\\ClientApp\\\\client_app\\\\src\\\\Components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { authenticationService } from './services/authentication_service';\nimport { useHistory } from 'react-router-dom';\nimport logo from '../Images/Logo/Logo.png';\nimport { Container, Navbar, Nav, Button, Modal, Form, Dropdown, DropdownButton } from 'react-bootstrap'; // var managerInfo = {\n//     id: '1',\n//     RoleName: 'Manager',\n//     FullName: 'Andrii Andriovich',\n//     Email: 'manager@gmail.com',\n//     PhoneNumber: '095435t436223',\n//     Password: '3425'\n// }\n// var customerInfo = {\n//     id: '0',\n//     RoleName: 'User',\n//     FullName: 'Ivan Ivanovich',\n//     Email: 'customer@gmail.com',\n//     PhoneNumber: '0954352462623',\n//     Password: '5233'\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [person, setPerson] = useState(null);\n  const [show, setShow] = useState(false); //const [userId, setUserId] = useState(0);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  let history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  async function handleSignIn() {\n    //authenticationService.login(\"user@example.com\", \"string\");\n    await authenticationService.login(email, password);\n    var personData = localStorage.getItem('currentUser');\n    var data = JSON.parse(personData);\n\n    if (personData !== null) {\n      setPerson(data);\n    }\n\n    setShow(false);\n  }\n\n  function handleSignOut() {\n    localStorage.clear();\n    setPerson(null);\n  }\n\n  function handleProfileClick() {\n    history.push({\n      pathname: '/user/' + person.id,\n      state: {\n        personId: person.id\n      }\n    });\n  }\n\n  useEffect(() => {\n    var personData = localStorage.getItem('currentUser');\n    var data = JSON.parse(personData);\n\n    if (personData !== null) {\n      setPerson(data);\n    }\n  }, []);\n\n  const getDropdown = () => {\n    if (person !== null) {\n      return /*#__PURE__*/_jsxDEV(Nav, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: person.name + ' ' + person.surname,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            variant: \"primary\",\n            id: \"dd-but-profile\",\n            onClick: handleProfileClick,\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            variant: \"primary\",\n            id: \"dd-but-sign-out\",\n            onClick: handleSignOut,\n            children: \"Sign out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Nav, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: \"Account\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            variant: \"primary\",\n            id: \"dd-but-sign-in\",\n            onClick: handleShow,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      collapseOnSelect: true,\n      expand: \"md\",\n      bg: \"dark\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            height: \"40\",\n            width: \"auto\",\n            className: \"d-inline-block align-top\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), ' ', \"LandSelling\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"responsive-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"responsive-navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/home\",\n              children: \" Lots \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/about\",\n              children: \" About us \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/rules\",\n              children: \" Rules \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), getDropdown()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fromBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => {\n                setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We`ll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fromBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fromBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fromSignInButton\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSignIn,\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Header, \"jwxMxLQUPpZgsDNBEucSB2bo4h8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Valentyn/study/graduate work/LandSellingWebsite/LandSellingWebsite/ClientApp/client_app/src/Components/Header.js"],"names":["React","useState","useEffect","authenticationService","useHistory","logo","Container","Navbar","Nav","Button","Modal","Form","Dropdown","DropdownButton","Header","person","setPerson","show","setShow","handleClose","handleShow","history","email","setEmail","password","setPassword","handleSignIn","login","personData","localStorage","getItem","data","JSON","parse","handleSignOut","clear","handleProfileClick","push","pathname","id","state","personId","getDropdown","name","surname","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { authenticationService } from './services/authentication_service'\r\nimport { useHistory } from 'react-router-dom'\r\nimport logo from '../Images/Logo/Logo.png'\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from 'react-bootstrap'\r\n\r\n// var managerInfo = {\r\n//     id: '1',\r\n//     RoleName: 'Manager',\r\n//     FullName: 'Andrii Andriovich',\r\n//     Email: 'manager@gmail.com',\r\n//     PhoneNumber: '095435t436223',\r\n//     Password: '3425'\r\n// }\r\n// var customerInfo = {\r\n//     id: '0',\r\n//     RoleName: 'User',\r\n//     FullName: 'Ivan Ivanovich',\r\n//     Email: 'customer@gmail.com',\r\n//     PhoneNumber: '0954352462623',\r\n//     Password: '5233'\r\n// }\r\n\r\nexport default function Header() {\r\n  const [person, setPerson] = useState(null)\r\n  const [show, setShow] = useState(false)\r\n  //const [userId, setUserId] = useState(0);\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  let history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  async function handleSignIn() {\r\n    //authenticationService.login(\"user@example.com\", \"string\");\r\n    await authenticationService.login(email, password)\r\n    var personData = localStorage.getItem('currentUser')\r\n    var data = JSON.parse(personData)\r\n    if (personData !== null) {\r\n      setPerson(data)\r\n    }\r\n    setShow(false)\r\n  }\r\n\r\n  function handleSignOut() {\r\n    localStorage.clear()\r\n    setPerson(null)\r\n  }\r\n\r\n  function handleProfileClick() {\r\n    history.push({\r\n      pathname: '/user/' + person.id,\r\n      state: { personId: person.id },\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    var personData = localStorage.getItem('currentUser')\r\n    var data = JSON.parse(personData)\r\n    if (personData !== null) {\r\n      setPerson(data)\r\n    }\r\n  }, [])\r\n  const getDropdown = () => {\r\n    if (person !== null) {\r\n      return (\r\n        <Nav>\r\n          <DropdownButton\r\n            id='dropdown-basic-button'\r\n            title={person.name + ' ' + person.surname}\r\n          >\r\n            {/* <Dropdown.Item variant=\"primary\" id=\"dd-but-sign-in\" onClick={handleShow}>Sign in</Dropdown.Item> */}\r\n            <Dropdown.Item\r\n              variant='primary'\r\n              id='dd-but-profile'\r\n              onClick={handleProfileClick}\r\n            >\r\n              Profile\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              variant='primary'\r\n              id='dd-but-sign-out'\r\n              onClick={handleSignOut}\r\n            >\r\n              Sign out\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </Nav>\r\n      )\r\n    } else {\r\n      return (\r\n        <Nav>\r\n          <DropdownButton id='dropdown-basic-button' title='Account'>\r\n            <Dropdown.Item\r\n              variant='primary'\r\n              id='dd-but-sign-in'\r\n              onClick={handleShow}\r\n            >\r\n              Sign in\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </Nav>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand='md' bg='dark' variant='dark'>\r\n        <Container>\r\n          <Navbar.Brand href='/'>\r\n            <img\r\n              src={logo}\r\n              height='40'\r\n              width='auto'\r\n              className='d-inline-block align-top'\r\n              alt='Logo'\r\n            />{' '}\r\n            LandSelling\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n          <Navbar.Collapse id='responsive-navbar-nav'>\r\n            <Nav className='mr-auto'>\r\n              <Nav.Link href='/home'> Lots </Nav.Link>\r\n              <Nav.Link href='/about'> About us </Nav.Link>\r\n              <Nav.Link href='/rules'> Rules </Nav.Link>\r\n            </Nav>\r\n            {getDropdown()}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Log in</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId='fromBasicEmail'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value)\r\n                }}\r\n              />\r\n              <Form.Text className='text-muted'>\r\n                We`ll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId='fromBasicPassword'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value)\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='fromBasicCheckbox'>\r\n              <Form.Check type='checkbox' label='Remember me' />\r\n            </Form.Group>\r\n            <Form.Group controlId='fromSignInButton'>\r\n              <Button variant='primary' onClick={handleSignIn}>\r\n                Sign in\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}