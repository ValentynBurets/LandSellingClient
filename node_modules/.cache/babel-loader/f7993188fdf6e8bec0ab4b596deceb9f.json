{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Valentyn\\\\study\\\\graduate work\\\\LandSellingWebsite\\\\LandSellingWebsite\\\\ClientApp\\\\client_app\\\\src\\\\Components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { authenticationService } from './services/authentication_service';\nimport { useHistory } from 'react-router-dom';\nimport logo from './Logo/Logo.png';\nimport { Container, Navbar, Nav, Button, Modal, Form, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar managerInfo = {\n  id: '1',\n  RoleName: 'Manager',\n  FullName: 'Andrii Andriovich',\n  Email: 'manager@gmail.com',\n  PhoneNumber: '095435t436223',\n  Password: '3425'\n};\nvar customerInfo = {\n  id: '0',\n  RoleName: 'User',\n  FullName: 'Ivan Ivanovich',\n  Email: 'customer@gmail.com',\n  PhoneNumber: '0954352462623',\n  Password: '5233'\n};\nexport default function Header() {\n  _s();\n\n  const [person, setPerson] = useState(null);\n  const [show, setShow] = useState(false);\n  const [userId, setUserId] = useState(0);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function handleSignIn() {\n    //authenticationService.login(\"user@example.com\", \"string\");\n    await authenticationService.login(email, password);\n    var personData = localStorage.getItem(\"currentUser\");\n    var data = JSON.parse(personData);\n\n    if (personData !== null) {\n      setPerson(data);\n    }\n\n    setShow(false);\n  }\n\n  function handleSignOut() {\n    localStorage.clear();\n    setPerson(null);\n  }\n\n  function handleProfileClick() {\n    history.push({\n      pathname: '/user/' + person.id,\n      state: {\n        personId: person.id\n      }\n    });\n  }\n\n  useEffect(() => {\n    var personData = localStorage.getItem(\"currentUser\");\n    var data = JSON.parse(personData);\n\n    if (personData !== null) {\n      setPerson(data);\n    }\n  }, []);\n\n  const getDropdown = () => {\n    if (person !== null) {\n      return /*#__PURE__*/_jsxDEV(Nav, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: person.name + ' ' + person.surname,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            variant: \"primary\",\n            id: \"dd-but-profile\",\n            onClick: handleProfileClick,\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            variant: \"primary\",\n            id: \"dd-but-sign-out\",\n            onClick: handleSignOut,\n            children: \"Sign out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Nav, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: \"Account\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            variant: \"primary\",\n            id: \"dd-but-sign-in\",\n            onClick: handleShow,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"e+Q8yxwn6AVuWPPGhEKNvIMHzgE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Valentyn/study/graduate work/LandSellingWebsite/LandSellingWebsite/ClientApp/client_app/src/Components/Header.js"],"names":["React","useState","useContext","useEffect","authenticationService","useHistory","logo","Container","Navbar","Nav","Button","Modal","Form","Dropdown","DropdownButton","managerInfo","id","RoleName","FullName","Email","PhoneNumber","Password","customerInfo","Header","person","setPerson","show","setShow","userId","setUserId","handleClose","handleShow","history","email","setEmail","password","setPassword","handleSignIn","login","personData","localStorage","getItem","data","JSON","parse","handleSignOut","clear","handleProfileClick","push","pathname","state","personId","getDropdown","name","surname"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { authenticationService } from './services/authentication_service'\r\nimport { useHistory } from 'react-router-dom'\r\nimport logo from './Logo/Logo.png'\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from 'react-bootstrap'\r\n\r\nvar managerInfo = {\r\n  id: '1',\r\n  RoleName: 'Manager',\r\n  FullName: 'Andrii Andriovich',\r\n  Email: 'manager@gmail.com',\r\n  PhoneNumber: '095435t436223',\r\n  Password: '3425'\r\n}\r\nvar customerInfo = {\r\n  id: '0',\r\n  RoleName: 'User',\r\n  FullName: 'Ivan Ivanovich',\r\n  Email: 'customer@gmail.com',\r\n  PhoneNumber: '0954352462623',\r\n  Password: '5233'\r\n}\r\n\r\nexport default function Header() {\r\n   \r\n    const [person, setPerson] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [userId, setUserId] = useState(0);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    let history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword]= useState(\"\");\r\n\r\n    async function handleSignIn() {\r\n       \r\n        //authenticationService.login(\"user@example.com\", \"string\");\r\n        await authenticationService.login(email, password);\r\n        var personData = localStorage.getItem(\"currentUser\");\r\n        var data = JSON.parse(personData);\r\n        if (personData !== null) {\r\n            setPerson(data);\r\n        }\r\n        setShow(false);\r\n    }\r\n\r\n  function handleSignOut() {\r\n    localStorage.clear()\r\n    setPerson(null)\r\n  }\r\n\r\n    function handleProfileClick(){\r\n        history.push({\r\n            pathname: '/user/' + person.id,\r\n            state: { personId: person.id}\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        var personData = localStorage.getItem(\"currentUser\");\r\n        var data = JSON.parse(personData);\r\n        if (personData !== null) {\r\n            setPerson(data);\r\n        }\r\n    }, []);\r\n    const getDropdown = ()=>{\r\n        if(person !== null){\r\n            return( \r\n                            <Nav>\r\n                                <DropdownButton id=\"dropdown-basic-button\" title={person.name + ' ' + person.surname}>\r\n                                {/* <Dropdown.Item variant=\"primary\" id=\"dd-but-sign-in\" onClick={handleShow}>Sign in</Dropdown.Item> */}\r\n                                <Dropdown.Item variant=\"primary\" id=\"dd-but-profile\" onClick = {handleProfileClick}>Profile</Dropdown.Item>\r\n                                <Dropdown.Item variant=\"primary\" id=\"dd-but-sign-out\" onClick={handleSignOut}>Sign out</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </Nav>)\r\n                    }else {\r\n                        return (\r\n                            <Nav>\r\n                            <DropdownButton id=\"dropdown-basic-button\" title=\"Account\">\r\n                                <Dropdown.Item variant=\"primary\" id=\"dd-but-sign-in\" onClick={handleShow}>Sign in</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </Nav>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            {/* <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            src = {logo}\r\n                            height=\"40\"\r\n                            width=\"auto\"\r\n                            className=\"d-inline-block align-top\"\r\n                            alt=\"Logo\"\r\n                        /> LandSelling\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/\"> Lots </Nav.Link>\r\n                            <Nav.Link href=\"/about\"> About us </Nav.Link>\r\n                            <Nav.Link href=\"/rules\"> Rules </Nav.Link>\r\n                        </Nav>\r\n                        {getDropdown()}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar> */}\r\n            {/* <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Log in</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"fromBasicEmail\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" value ={email} onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                            <Form.Text className=\"text-muted\">We`ll never share your email with anyone else.</Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"fromBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Enter password\" value ={password} onChange={(e)=>{setPassword(e.target.value)}}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"fromBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"fromSignInButton\">\r\n                            <Button variant=\"primary\" onClick={handleSignIn}>Sign in</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal> */}\r\n        </Container>\r\n        );\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}