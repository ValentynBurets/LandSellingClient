{"ast":null,"code":"import axios from 'axios';\nimport ConnectionConfig from '../../../jsonData/ConnectionConfig.json';\n\nconst saveOrder = (myProductArray, comments) => {\n  if (myProductArray == null) {\n    alert(\"Please add new product to create an order\");\n    return;\n  }\n\n  let newOrder = {\n    \"products\": [],\n    \"comments\": [{\n      \"text\": comments.toString()\n    }]\n  };\n  myProductArray.forEach(element => {\n    newOrder.products.push({\n      \"picture\": element.picture,\n      \"serviceId\": element.serviceId,\n      \"amount\": element.amount\n    });\n  }); // comments.forEach(element => {\n  //     newOrder.comments.push({\n  //         \"text\": element\n  //     })\n  // });\n\n  let token = localStorage.getItem('token');\n  axios.post(`${ConnectionConfig.ServerUrl + ConnectionConfig.Routes.CreateOrder}`, newOrder, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(responce => {\n    var data = responce.data;\n    console.log(data);\n  }).catch(e => {\n    console.log(e);\n    alert(e);\n  });\n};\n\nexport default saveOrder;","map":{"version":3,"sources":["C:/Users/vab/source/repos/LandSellingWebsite/LandSellingWebClient/land-selling-web/src/Pages/LotManagement/Services/SaveOrder.js"],"names":["axios","ConnectionConfig","saveOrder","myProductArray","comments","alert","newOrder","toString","forEach","element","products","push","picture","serviceId","amount","token","localStorage","getItem","post","ServerUrl","Routes","CreateOrder","headers","then","responce","data","console","log","catch","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,yCAA7B;;AAEA,MAAMC,SAAS,GAAG,CAACC,cAAD,EAAiBC,QAAjB,KAA8B;AAE5C,MAAGD,cAAc,IAAI,IAArB,EAA0B;AACtBE,IAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACH;;AAED,MAAIC,QAAQ,GAAG;AACX,gBAAY,EADD;AAEX,gBAAY,CAAC;AAAC,cAAQF,QAAQ,CAACG,QAAT;AAAT,KAAD;AAFD,GAAf;AAKAJ,EAAAA,cAAc,CAACK,OAAf,CAAuBC,OAAO,IAAI;AAC9BH,IAAAA,QAAQ,CAACI,QAAT,CAAkBC,IAAlB,CAAuB;AACnB,iBAAWF,OAAO,CAACG,OADA;AAEnB,mBAAaH,OAAO,CAACI,SAFF;AAGnB,gBAAUJ,OAAO,CAACK;AAHC,KAAvB;AAKH,GAND,EAZ4C,CAoB5C;AACA;AACA;AACA;AACA;;AAEA,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAEAjB,EAAAA,KAAK,CACJkB,IADD,CACO,GAAEjB,gBAAgB,CAACkB,SAAjB,GAA6BlB,gBAAgB,CAACmB,MAAjB,CAAwBC,WAAY,EAD1E,EAEAf,QAFA,EAGA;AACIgB,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASP,KAAM;AAAnC;AADb,GAHA,EAMCQ,IAND,CAMOC,QAAD,IAAc;AAChB,QAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GATD,EAUCG,KAVD,CAUQC,CAAD,IAAO;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACAxB,IAAAA,KAAK,CAACwB,CAAD,CAAL;AACH,GAbD;AAcH,CA1CD;;AA4CA,eAAe3B,SAAf","sourcesContent":["import axios from 'axios'\r\n\r\nimport ConnectionConfig from '../../../jsonData/ConnectionConfig.json'\r\n\r\nconst saveOrder = (myProductArray, comments) => {\r\n\r\n    if(myProductArray == null){\r\n        alert(\"Please add new product to create an order\");\r\n        return;\r\n    } \r\n\r\n    let newOrder = {\r\n        \"products\": [],\r\n        \"comments\": [{\"text\": comments.toString()}]\r\n    } \r\n\r\n    myProductArray.forEach(element => {\r\n        newOrder.products.push({\r\n            \"picture\": element.picture,\r\n            \"serviceId\": element.serviceId,\r\n            \"amount\": element.amount\r\n        })\r\n    });\r\n\r\n    // comments.forEach(element => {\r\n    //     newOrder.comments.push({\r\n    //         \"text\": element\r\n    //     })\r\n    // });\r\n\r\n    let token = localStorage.getItem('token')\r\n    \r\n    axios\r\n    .post(`${ConnectionConfig.ServerUrl + ConnectionConfig.Routes.CreateOrder}`,\r\n    newOrder, \r\n    {   \r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n    .then((responce) => {\r\n        var data = responce.data\r\n        console.log(data)\r\n    })\r\n    .catch((e) => {\r\n        console.log(e)\r\n        alert(e)\r\n    })\r\n}  \r\n\r\nexport default saveOrder\r\n"]},"metadata":{},"sourceType":"module"}