[{"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\index.js":"1","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\reportWebVitals.js":"2","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\App.js":"3","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Localization\\LanguageProvider.tsx":"4","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\NewLot.js":"5","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\AboutPage\\About.js":"6","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\UserListPage\\UserListPage.js":"7","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\StatisticCharts\\StatisticCharts.tsx":"8","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotListPage\\LotList.tsx":"9","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\ProfilePage.tsx":"10","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\LotView.tsx":"11","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Layouts\\Layout\\Layout.tsx":"12","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\AgreementListPage.tsx":"13","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\PaymentList.tsx":"14","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\SaveLot.js":"15","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\SavePriceCoef.js":"16","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\SaveImages.js":"17","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\UserListPage\\AddUser\\ModalWindow.js":"18","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\MapComponent.tsx":"19","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\useMapContext.tsx":"20","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\UploadImage\\UploadImage.tsx":"21","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\PriceCoefTable\\Tbody.tsx":"22","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\PriceCoefTable\\TheaderList.tsx":"23","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Layouts\\Footer\\Footer.js":"24","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Message\\BadRequest.tsx":"25","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\StatisticCharts\\Services\\LoadStatisticServices.tsx":"26","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\StatisticCharts\\Components\\Chart.tsx":"27","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotListPage\\Services\\LoadLotsService.tsx":"28","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\Components\\ProfileForm.tsx":"29","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\UpdateLotViewsService.tsx":"30","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\LoadDetailLotInfoService.tsx":"31","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\LoadPriceCoefService.tsx":"32","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\LoadBidsService.tsx":"33","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Service\\LoadPaymentService.tsx":"34","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\LotCard\\LotCardDeck\\LotCardDeck.tsx":"35","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\BuyLot\\BuyLot.tsx":"36","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\RentLot\\RentLot.tsx":"37","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Image\\ImageCarousel\\LotImageCarousel.tsx":"38","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\LotCard\\LotCard\\Service\\LoadImagesService.tsx":"39","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\MyLotAgreementsListAsCustomer\\MyLotAgreementsListAsCustomer.tsx":"40","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Components\\Table\\Tbody.tsx":"41","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\MyLotAgreementsList\\MyLotAgreementsList.tsx":"42","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Components\\Table\\TheaderList.tsx":"43","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\UserListPage\\AddUser\\Form.js":"44","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Layouts\\Header\\Header.jsx":"45","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\encodeFile.tsx":"46","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\PriceCoefTable\\TableElement.tsx":"47","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\Search\\Search.tsx":"48","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\Locate\\Locate.tsx":"49","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\Services\\LoadProfileInfoService.tsx":"50","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\Services\\LoadProfileInfoByIdService.tsx":"51","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Services\\GetService.tsx":"52","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Services\\PutService.tsx":"53","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Components\\Table\\TableElement.tsx":"54","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Message\\GoodRequest.tsx":"55","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\Table\\Tbody.tsx":"56","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\Table\\TheaderList.tsx":"57","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\MyLotAgreementsListAsCustomer\\PayForAgreement\\PayForAgreement.tsx":"58","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\SelectPriceCoefService.tsx":"59","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\CreateNewAgreementService.tsx":"60","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\Table\\TableElement.tsx":"61","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Payment.tsx":"62","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Components\\BraintreeDropIn\\BraintreeDropIn.tsx":"63","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\Table\\Tbody.tsx":"64","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\Table\\TheaderList.tsx":"65","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\PlaceBidService.tsx":"66","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\LotCard\\LotCard\\LotCard.tsx":"67","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\CountdownTimer.tsx":"68","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Services\\CreatePaymentService.tsx":"69","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Services\\GetPaymentToken.tsx":"70","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\Table\\TableElement.tsx":"71","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\useCountdown.tsx":"72","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\ExpiredNotice.tsx":"73","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\ShowCounter.tsx":"74","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\DateTimeDisplay.tsx":"75","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Types\\RequestResult.ts":"76","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\AdminLotList.tsx":"77","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Services\\LoadAllLotInfoService.tsx":"78","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Components\\Table\\Tbody.tsx":"79","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Components\\Table\\TheaderList.tsx":"80","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Components\\Table\\TableElement.tsx":"81"},{"size":583,"mtime":1654862211403,"results":"82","hashOfConfig":"83"},{"size":375,"mtime":1654862211404,"results":"84","hashOfConfig":"83"},{"size":3006,"mtime":1655036013240,"results":"85","hashOfConfig":"83"},{"size":791,"mtime":1654862211338,"results":"86","hashOfConfig":"83"},{"size":24341,"mtime":1655300906314,"results":"87","hashOfConfig":"83"},{"size":9120,"mtime":1655292409131,"results":"88","hashOfConfig":"83"},{"size":8077,"mtime":1655301803660,"results":"89","hashOfConfig":"83"},{"size":1917,"mtime":1655286899027,"results":"90","hashOfConfig":"83"},{"size":5418,"mtime":1655301107900,"results":"91","hashOfConfig":"83"},{"size":675,"mtime":1655292961881,"results":"92","hashOfConfig":"83"},{"size":11125,"mtime":1655300513004,"results":"93","hashOfConfig":"83"},{"size":505,"mtime":1654862211338,"results":"94","hashOfConfig":"83"},{"size":629,"mtime":1655292336858,"results":"95","hashOfConfig":"83"},{"size":2106,"mtime":1654862211365,"results":"96","hashOfConfig":"83"},{"size":791,"mtime":1654862211392,"results":"97","hashOfConfig":"83"},{"size":951,"mtime":1654862211392,"results":"98","hashOfConfig":"83"},{"size":874,"mtime":1654862211391,"results":"99","hashOfConfig":"83"},{"size":2684,"mtime":1654862211401,"results":"100","hashOfConfig":"83"},{"size":6434,"mtime":1654862211343,"results":"101","hashOfConfig":"83"},{"size":1264,"mtime":1654862211344,"results":"102","hashOfConfig":"83"},{"size":1546,"mtime":1654862211388,"results":"103","hashOfConfig":"83"},{"size":609,"mtime":1654862211378,"results":"104","hashOfConfig":"83"},{"size":569,"mtime":1654862211379,"results":"105","hashOfConfig":"83"},{"size":4356,"mtime":1654862211335,"results":"106","hashOfConfig":"83"},{"size":508,"mtime":1654972858579,"results":"107","hashOfConfig":"83"},{"size":2193,"mtime":1654862211398,"results":"108","hashOfConfig":"83"},{"size":4020,"mtime":1655205265551,"results":"109","hashOfConfig":"83"},{"size":1047,"mtime":1654862211368,"results":"110","hashOfConfig":"83"},{"size":15172,"mtime":1654955129144,"results":"111","hashOfConfig":"83"},{"size":627,"mtime":1654862211377,"results":"112","hashOfConfig":"83"},{"size":990,"mtime":1654862211375,"results":"113","hashOfConfig":"83"},{"size":830,"mtime":1654862211376,"results":"114","hashOfConfig":"83"},{"size":796,"mtime":1654954399037,"results":"115","hashOfConfig":"83"},{"size":915,"mtime":1654862211366,"results":"116","hashOfConfig":"83"},{"size":439,"mtime":1654862211340,"results":"117","hashOfConfig":"83"},{"size":6991,"mtime":1655292653777,"results":"118","hashOfConfig":"83"},{"size":5627,"mtime":1655292674474,"results":"119","hashOfConfig":"83"},{"size":1475,"mtime":1654862211334,"results":"120","hashOfConfig":"83"},{"size":751,"mtime":1654862211340,"results":"121","hashOfConfig":"83"},{"size":6703,"mtime":1655201706128,"results":"122","hashOfConfig":"83"},{"size":512,"mtime":1654862211365,"results":"123","hashOfConfig":"83"},{"size":8087,"mtime":1655201729404,"results":"124","hashOfConfig":"83"},{"size":376,"mtime":1654862211365,"results":"125","hashOfConfig":"83"},{"size":4986,"mtime":1655301641861,"results":"126","hashOfConfig":"83"},{"size":9170,"mtime":1655044964993,"results":"127","hashOfConfig":"83"},{"size":806,"mtime":1654862211393,"results":"128","hashOfConfig":"83"},{"size":845,"mtime":1654862211378,"results":"129","hashOfConfig":"83"},{"size":1958,"mtime":1654862211344,"results":"130","hashOfConfig":"83"},{"size":770,"mtime":1654862211342,"results":"131","hashOfConfig":"83"},{"size":1073,"mtime":1654862211395,"results":"132","hashOfConfig":"83"},{"size":1130,"mtime":1654862211395,"results":"133","hashOfConfig":"83"},{"size":729,"mtime":1654862211349,"results":"134","hashOfConfig":"83"},{"size":658,"mtime":1654862211349,"results":"135","hashOfConfig":"83"},{"size":459,"mtime":1654862211364,"results":"136","hashOfConfig":"83"},{"size":513,"mtime":1654972861019,"results":"137","hashOfConfig":"83"},{"size":1244,"mtime":1654969450220,"results":"138","hashOfConfig":"83"},{"size":1278,"mtime":1654955286450,"results":"139","hashOfConfig":"83"},{"size":135,"mtime":1654862211361,"results":"140","hashOfConfig":"83"},{"size":776,"mtime":1654862211376,"results":"141","hashOfConfig":"83"},{"size":811,"mtime":1654862211374,"results":"142","hashOfConfig":"83"},{"size":4819,"mtime":1654969543589,"results":"143","hashOfConfig":"83"},{"size":1775,"mtime":1654971896521,"results":"144","hashOfConfig":"83"},{"size":4023,"mtime":1654971178501,"results":"145","hashOfConfig":"83"},{"size":796,"mtime":1655028419140,"results":"146","hashOfConfig":"83"},{"size":492,"mtime":1654862211373,"results":"147","hashOfConfig":"83"},{"size":803,"mtime":1654862211376,"results":"148","hashOfConfig":"83"},{"size":2894,"mtime":1654862211339,"results":"149","hashOfConfig":"83"},{"size":719,"mtime":1654862211350,"results":"150","hashOfConfig":"83"},{"size":819,"mtime":1654862211348,"results":"151","hashOfConfig":"83"},{"size":843,"mtime":1654862211348,"results":"152","hashOfConfig":"83"},{"size":2104,"mtime":1655026407946,"results":"153","hashOfConfig":"83"},{"size":1021,"mtime":1654862211352,"results":"154","hashOfConfig":"83"},{"size":259,"mtime":1654862211351,"results":"155","hashOfConfig":"83"},{"size":789,"mtime":1654862211351,"results":"156","hashOfConfig":"83"},{"size":386,"mtime":1654862211350,"results":"157","hashOfConfig":"83"},{"size":72,"mtime":1654968862004,"results":"158","hashOfConfig":"83"},{"size":1456,"mtime":1655286394214,"results":"159","hashOfConfig":"83"},{"size":773,"mtime":1655034792259,"results":"160","hashOfConfig":"83"},{"size":668,"mtime":1655034270638,"results":"161","hashOfConfig":"83"},{"size":1790,"mtime":1655044903179,"results":"162","hashOfConfig":"83"},{"size":6035,"mtime":1655044897694,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},"qyfkru",{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"167"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"167"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"175"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"167"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"167"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"175"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"175"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"175"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"175"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"175"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"175"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"175"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"175"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"175"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"175"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"175"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"175"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"175"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"175"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"175"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"175"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"175"},"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\index.js",["353"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport i18n from \"./Components/Localization/LanguageProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["354","355"],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\reportWebVitals.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\App.js",["356"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport { Layout } from \"./Components/Layouts/Layout/Layout\";\r\nimport NewLot from \"./Pages/LotManagement/NewLot/NewLot.js\"\r\nimport LotList from \"./Pages/LotManagement/LotListPage/LotList\"\r\nimport LotView from \"./Pages/LotManagement/LotViewPage/LotView\"\r\nimport AgreementListPage from \"./Pages/LotManagement/AgreementManagement/AgreementListPage/AgreementListPage\"\r\nimport PaymentList from \"./Pages/LotManagement/AgreementManagement/PaymentList/PaymentList\"\r\nimport About from \"./Pages/AboutPage/About\"\r\nimport UserListPage from \"./Pages/UserListPage/UserListPage\"\r\nimport StatisticCharts from \"./Pages/StatisticCharts/StatisticCharts\"\r\nimport  ProfilePage from \"./Pages/ProfilePage/ProfilePage\"\r\nimport AdminLotList from \"./Pages/LotManagement/AdminLotListPage/AdminLotList\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        {/* <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/home\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/user-list\">UserListPage</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/new-lot\">CrateNewLot</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/agreement-list\">AgreementListPage</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/payment\">Payment</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/lot-list\">Lots List</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/lot\"> LotView</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/statistics-page\"> Statistics</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div> */}\r\n      <Layout>\r\n        {/* to add a new page just add a route here */}\r\n        <Route exact path=\"/\" component={LotList} />\r\n        <Route exact path=\"/index\" component={LotList} />\r\n        <Route exact path=\"/index.html\" component={LotList} />\r\n        <Route exact path=\"/new-lot\" component={NewLot} />\r\n        <Route exact path=\"/lot-list\" component={LotList} />\r\n        <Route exact path=\"/lot\" component={LotView} />\r\n        <Route exact path=\"/lot/:id\" component={LotView} />\r\n        <Route exact path=\"/agreement-list\" component={AgreementListPage} />\r\n        <Route exact path=\"/payment-list/:id\" component={PaymentList} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/user-list\" component={UserListPage} />\r\n        <Route exact path=\"/statistics\" component={StatisticCharts} />\r\n        <Route exact path=\"/profile\" component={ProfilePage} />\r\n        <Route exact path=\"/profile/:id\" component={ProfilePage} />\r\n        <Route exact path=\"/lot-list-management\" component={AdminLotList} />\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Localization\\LanguageProvider.tsx",[],["357","358"],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\NewLot.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\AboutPage\\About.js",["359","360","361"],"import React, { Component } from \"react\";\r\nimport { Container, Tab, Nav, Row, Col, Card, CardDeck } from \"react-bootstrap\";\r\nimport { Trans } from \"react-i18next\";\r\n\r\nimport landImage from \"../../Assets/Images/Logo/house_symbol_with_location.webp\";\r\n\r\nimport Valentyn from \"../../Assets/Images/About/Valentyn.jpg\";\r\n\r\nimport style from \"./AboutStyle.module.sass\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className={style.page_background} style={{ minHeight: `${window.innerHeight - 205}px` }} >\r\n        <Container>\r\n          <Tab.Container id=\"ledt-tabs-example\" defaultActiveKey=\"first\">\r\n            <Row>\r\n              <Col sm={3} style={{marginTop: \"4rem\"}}>\r\n                <Nav variant=\"pills\" className=\"flex-column mt-2\">\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"first\">\r\n                      <Trans i18nKey=\"WhatISLS\">What is \"LandSelling\"?</Trans>\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"second\">\r\n                      <Trans i18nKey=\"OurTeam\">\r\n                        <Trans i18nKey=\"OurTeam\">Our team</Trans>\r\n                      </Trans>\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"third\">\r\n                      <Trans i18nKey=\"UsedInstruments\">Used instruments</Trans>\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Tab.Content \r\n                  className=\"mt-3\"   \r\n                  style={\r\n                    {\r\n                      borderRadius: \"8px\",\r\n                      backgroundColor: \"RGB(250, 250, 250, 0.823)\",\r\n                      boxShadow: \"0px 0px 30px 5px rgba(0, 0, 0, 0.123)\",\r\n                      margin: \"3rem\",\r\n                      padding: \"5px\"\r\n                    }\r\n                  } \r\n                >\r\n                  <Tab.Pane eventKey=\"first\">\r\n                    <h2 className=\"text-center m-4\">\r\n                      <Trans i18nKey=\"WhoWeAre\">Who we are?</Trans>\r\n                    </h2>\r\n                    <p style={{padding: \"1rem\"}}>\r\n                      <Trans i18nKey=\"WeTeam\">\r\n                        We are a team of young professionals who want to develop\r\n                        a new and unique products that will not leave you\r\n                        indifferent.\r\n                      </Trans>\r\n                    </p>\r\n                    <img\r\n                      className=\"mx-auto d-block\"\r\n                      width=\"700\"\r\n                      height=\"auto\"\r\n                      src={landImage}\r\n                    ></img>\r\n\r\n                    <h2 className=\"text-center m-4\">\r\n                      <Trans i18nKey=\"MainGoal\">Our main goal?</Trans>\r\n                    </h2>\r\n                    <p style={{padding: \"1rem\"}}>\r\n                      <Trans i18nKey=\"OurMainGoal\">\r\n                        Our main goal is to gain maximum skills in the\r\n                        development of this site to apply them in the future in\r\n                        new and even better projects. Each of us wants to\r\n                        develop in this direction in the future and develop\r\n                        better and better projects.\r\n                      </Trans>\r\n                    </p>\r\n                    <p style={{padding: \"1rem\"}}>\r\n                      <Trans i18nKey=\"PartOfThesis\">\r\n                        As part of this thesis, a web system for the sale and\r\n                        lease of land and real estate was designed and\r\n                        implemented. The system provides for its use by real\r\n                        estate companies. To do this, the system has a\r\n                        user-friendly interface and various opportunities for\r\n                        sale or lease of land and real estate.\r\n                      </Trans>\r\n                    </p>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"second\">\r\n                    <CardDeck                         style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\"\r\n                        }}>\r\n                      <Card\r\n                        bg=\"\"\r\n                        border=\"dark\"\r\n                        className=\"mb-4\"\r\n                        style={{\r\n                          flexWrap: \"nowrap\",\r\n                          minWidth: \"200px\",\r\n                          maxWidth: \"300px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\"\r\n                        }}\r\n                      >\r\n                        <Card.Img\r\n                          style={{ padding: \"20px\" }}\r\n                          variant=\"top\"\r\n                          src={Valentyn}\r\n                        />\r\n                        <Card.Body>\r\n                          <Card.Title>{this.props.Title}</Card.Title>\r\n                          <Card.Text>\r\n                            Valentyn Burets\r\n                            <p />\r\n                            Front-end and back end developer\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </CardDeck>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"third\">\r\n                    <h2 className=\"text-center m-4\">Front-end</h2>\r\n                    <p style={{padding: \"1rem\"}}>\r\n                      <Trans i18nKey=\"React\">\r\n                        React (також відомий як React.js або ReactJS) є\r\n                        відкритим вихідним кодом інтерфейсна бібліотека\r\n                        JavaScript для побудови інтерфейсів користувача або\r\n                        Компоненти інтерфейсу користувача. Його підтримують\r\n                        Facebook і спільнота індивідуальних забудовників і\r\n                        компаній. React можна використовувати як база в розробці\r\n                        односторінкових або мобільних додатків. Однак React\r\n                        займається лише станом управління та відтворення цього\r\n                        стану в DOM, щоб створити Додатки React зазвичай\r\n                        вимагають використання додаткових бібліотеки для\r\n                        маршрутизації, а також певні клієнтські функціональність\r\n                      </Trans>\r\n                    </p>\r\n                    <img\r\n                      className=\"mb-4 mx-auto d-block\"\r\n                      width=\"700\"\r\n                      height=\"auto\"\r\n                      src=\"https://miro.medium.com/max/2484/1*CeuWv9fCjD1uTiTuKytnBQ.png\"\r\n                    ></img>\r\n\r\n                    <h2 className=\"text-center m-4\">Back-end</h2>\r\n                    <p style={{padding: \"1rem\"}}>\r\n                      <Trans i18nKey=\"Net\">\r\n                        The .NET Framework (pronounced as 'dot net') is a\r\n                        software framework developed by Microsoft that runs\r\n                        primarily on Microsoft Windows. It includes a large\r\n                        class library called Framework Class Library (FCL) and\r\n                        provides language interoperability (each language can\r\n                        use code written in other languages) across several\r\n                        programming languages. Programs written for .NET\r\n                        Framework execute in a software environment (in contrast\r\n                        to a hardware environment) named the Common Language\r\n                        Runtime (CLR). The CLR is an application virtual machine\r\n                        that provides services such as security, memory\r\n                        management, and exception handling. As such, computer\r\n                        code written using .NET Framework is called 'managed\r\n                        code'. FCL and CLR together constitute the .NET\r\n                        Framework.\r\n                      </Trans>\r\n                    </p>\r\n                    <img\r\n                      className=\"mb-4 mx-auto d-block\"\r\n                      width=\"700\"\r\n                      height=\"auto\"\r\n                      src=\"https://media.proglib.io/wp-uploads/2019/08/c-sharp-dot-net.png\"\r\n                    ></img>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Col>\r\n            </Row>\r\n          </Tab.Container>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\UserListPage\\UserListPage.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\StatisticCharts\\StatisticCharts.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotListPage\\LotList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\ProfilePage.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\LotView.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Layouts\\Layout\\Layout.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\AgreementListPage.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\PaymentList.tsx",["362","363"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Row, Table, Container } from \"react-bootstrap\";\r\nimport { Trans } from \"react-i18next\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Payment } from \"../../../../Components/Types/Payment\";\r\nimport Tbody from \"./Components/Table/Tbody\";\r\nimport TheaderList from \"./Components/Table/TheaderList\";\r\n\r\nimport style from \"./PaymentListStyle.module.sass\";\r\nimport LoadPaymentService from \"./Service/LoadPaymentService\";\r\n\r\ninterface PaymentListProps {}\r\n\r\nfunction PaymentList(props: PaymentListProps) {\r\n  const params: { id: string } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  const [payments, setPayments] = useState<Payment[]>([]);\r\n\r\n  const back = () => {\r\n    history.push({\r\n      pathname: \"/agreement-list\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    LoadPaymentService({ setPayments: setPayments, agreementId: params.id });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"payments\", payments);\r\n  }, []);\r\n\r\n  return (\r\n    <Container style={{width: \"30%\"}}>\r\n      <Row className={style.header_text}>\r\n        <Trans i18nKey=\"PaymentList\">payment list</Trans>\r\n      </Row>\r\n      <Row style={{marginRight: \"3rem\"}} className={style.back_row}>\r\n        <Button\r\n          style={{\r\n            width: \"5rem\",\r\n            height: \"2.5rem\",\r\n            marginTop: \"1.5rem\",\r\n          }}\r\n          variant=\"primary\"\r\n          onClick={back}\r\n        >\r\n          <Trans i18nKey=\"Back\">Back</Trans>\r\n        </Button>\r\n      </Row>\r\n\r\n      <Row\r\n        style={{ marginBottom: \"20rem\" }}\r\n        className=\"justify-content-md-center mx-auto mt-3 ListOfElem\"\r\n      >\r\n        {payments && payments.length > 0 ? (\r\n          <Table responsive>\r\n            <TheaderList />\r\n            <Tbody bodyData={payments} />\r\n          </Table>\r\n        ) : (\r\n          <div>\r\n            <Trans i18nKey=\"NoPayments\">\r\n              There are no payments fot this agreement\r\n            </Trans>\r\n          </div>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaymentList;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\SaveLot.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\SavePriceCoef.js",["364"],"import axios from \"axios\";\r\nimport ConnectionConfig from \"../../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\n\r\nconst SavePriceCoef = (priceCoefs, lotId) => {\r\n  if (priceCoefs == null) {\r\n    alert(\"Please add price coefs to create a new lot with rent option\");\r\n    return;\r\n  }\r\n\r\n  let token = localStorage.getItem(\"token\");\r\n\r\n  priceCoefs.map(item => {\r\n    let singlePriceCoef = {\r\n      \"lotId\": lotId,\r\n      \"monthsCount\": item.monthsCount,\r\n      \"value\": item.value\r\n    }\r\n    axios\r\n    .post(\r\n      `${\r\n        ConnectionConfig.ServerUrl + ConnectionConfig.Routes.PriceCoef.Create\r\n      }`,\r\n      singlePriceCoef,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    )\r\n    .then((responce) => {\r\n      var data = responce.data;\r\n      console.log(data);\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      alert(e);\r\n    });\r\n  });\r\n\r\n  \r\n  \r\n};\r\n\r\nexport default SavePriceCoef;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\SaveImages.js",["365"],"import axios from \"axios\";\r\nimport ConnectionConfig from \"../../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\n\r\nconst SaveImages = (lotPictures, lotId) => {\r\n  if (lotPictures == null) {\r\n    alert(\"Please upload the images for lot\");\r\n    return;\r\n  }\r\n\r\n  let token = localStorage.getItem(\"token\");\r\n\r\nlotPictures.map( item => {\r\n  let image = {\r\n    'lotId': lotId,\r\n    'imageData': item.picture\r\n  };\r\n  console.log('image', image);\r\n\r\n  axios\r\n    .post(\r\n      `${\r\n        ConnectionConfig.ServerUrl + ConnectionConfig.Routes.Image.Create\r\n      }`,\r\n      image,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    )\r\n    .then((responce) => {\r\n      var data = responce.data;\r\n      console.log(data);\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      alert(e);\r\n    });\r\n\r\n})\r\n};\r\n\r\nexport default SaveImages;","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\UserListPage\\AddUser\\ModalWindow.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\MapComponent.tsx",["366","367","368"],"import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nimport Search from \"./Search/Search\";\r\nimport Locate from \"./Locate/Locate\";\r\n\r\nimport realEstateIcon from \"../../Assets/Images/icons/real-estate-business-house-on-a-hand.png\";\r\n\r\nimport \"@reach/combobox/styles.css\";\r\nimport mapStyles from \"./mapStyles.json\";\r\nimport style from \"./MapComponent.module.sass\";\r\nimport { LotLocation } from \"../Types/LotLocation\";\r\nimport useMapContext from \"./useMapContext\";\r\n\r\nconst mapContainerStyle = {\r\n  margin: \"1rem\",\r\n  width: \"55rem\",\r\n  height: \"30rem\",\r\n  borderRadius: \"10px\",\r\n};\r\n\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nconst libraries = [\"places\"] as (\r\n  | \"places\"\r\n  | \"drawing\"\r\n  | \"geometry\"\r\n  | \"localContext\"\r\n  | \"visualization\"\r\n)[];\r\n\r\ninterface MarkerProps {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\ninterface MapComponentProps {\r\n  isNewLot: boolean;\r\n  center: { lat: number; lng: number };\r\n  handleSetLocation: (arg: LotLocation) => void;\r\n  lotLocation: LotLocation;\r\n}\r\n\r\nexport default function MapComponent(props: MapComponentProps) {\r\n  const { location, setLocation } = useMapContext();\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY!,\r\n    libraries,\r\n  });\r\n  const [adress, setAdress] = useState<string>(\"\");\r\n  const [marker, setMarker] = useState<MarkerProps>();\r\n  const [selected, setSelected] = useState<MarkerProps>(\r\n    null as unknown as MarkerProps\r\n  );\r\n\r\n  const getGeocode = () => {\r\n    console.log(\"test\");\r\n    Geocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY!);\r\n    // set response language. Defaults to english.\r\n    Geocode.setLanguage(\"en\");\r\n\r\n    Geocode.fromLatLng(\r\n      location.latitude.toString(),\r\n      location.longitude.toString()\r\n    ).then(\r\n      (response) => {\r\n        setAdress(response.results[0].formatted_address);\r\n        let city = \"\",\r\n          region = \"\",\r\n          country = \"\",\r\n          house = \"\",\r\n          street = \"\";\r\n        for (\r\n          let i = 0;\r\n          i < response.results[0].address_components.length;\r\n          i++\r\n        ) {\r\n          for (\r\n            let j = 0;\r\n            j < response.results[0].address_components[i].types.length;\r\n            j++\r\n          ) {\r\n            switch (response.results[0].address_components[i].types[j]) {\r\n              case \"locality\":\r\n                city = response.results[0].address_components[i].long_name;\r\n                break;\r\n              case \"administrative_area_level_1\":\r\n                region = response.results[0].address_components[i].long_name;\r\n                break;\r\n              case \"country\":\r\n                country = response.results[0].address_components[i].long_name;\r\n                break;\r\n              case \"street_number\":\r\n                house = response.results[0].address_components[i].long_name;\r\n                break;\r\n              case \"route\":\r\n                street = response.results[0].address_components[i].long_name;\r\n                break;\r\n            }\r\n          }\r\n        }\r\n\r\n        props.handleSetLocation({\r\n          latitude: location.latitude,\r\n          longitude: location.longitude,\r\n          country: country,\r\n          region: region,\r\n          city: city,\r\n          street: street,\r\n          house: house,\r\n        } as LotLocation);\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (!props.isNewLot && props.lotLocation) {\r\n      console.log(props.lotLocation)\r\n      setMarker({\r\n        lat: props.lotLocation.latitude,\r\n        lng: props.lotLocation.longitude,\r\n      });\r\n    }\r\n  }, [props.lotLocation]);\r\n\r\n  useEffect(() => {\r\n    getGeocode();\r\n  }, [location]);\r\n\r\n  const onMapClick = useCallback((e) => {\r\n    console.log(props.isNewLot);\r\n    if (props.isNewLot) {\r\n      setMarker({\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n      });\r\n\r\n      setLocation((prev: LotLocation) => ({\r\n        ...prev,\r\n        longitude: e.latLng.lng(),\r\n        latitude: e.latLng.lat(),\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const mapRef = useRef<google.maps.Map>();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    console.log(\"{lat, lng}\", { lat, lng });\r\n\r\n    mapRef.current !== undefined && mapRef.current.panTo({ lat, lng });\r\n    mapRef.current !== undefined && mapRef.current.setZoom(14);\r\n  }, []);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.search_style}>\r\n        <Search panTo={panTo} />\r\n      </div>\r\n      <div className={style.locate_style}>\r\n        <Locate panTo={panTo} />\r\n      </div>\r\n\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={12}\r\n        center={\r\n          props.center.lat !== 0\r\n            ? props.center\r\n            : {\r\n                lat: 49.835457,\r\n                lng: 24.022879,\r\n              }\r\n        }\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {marker && (\r\n          <Marker\r\n            position={{\r\n              lat: marker.lat,\r\n              lng: marker.lng,\r\n            }}\r\n            icon={{\r\n              url: realEstateIcon,\r\n              scaledSize: new window.google.maps.Size(30, 30),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(15, 15),\r\n            }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        )}\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{\r\n              lat: selected.lat,\r\n              lng: selected.lng,\r\n            }}\r\n            onCloseClick={() => {\r\n              setSelected(null as unknown as MarkerProps);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2> Selected Location</h2>\r\n              <p>{adress}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\useMapContext.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\UploadImage\\UploadImage.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\PriceCoefTable\\Tbody.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\PriceCoefTable\\TheaderList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Layouts\\Footer\\Footer.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Message\\BadRequest.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\StatisticCharts\\Services\\LoadStatisticServices.tsx",["369"],"import React from \"react\"\r\nimport GetService from \"../../../Components/Services/GetService\"\r\n\r\nimport ConnectionConfig from \"../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\"\r\nimport { RequestResult } from \"../../../Components/Types/RequestResult\";\r\n\r\ninterface ILoadStatisticServicesProps{\r\n  setLotsQuantity: (data: number) => void;\r\n  setBidsQuantity: (data: number) => void;\r\n  setAgreementsQuantity: (data: number) => void;\r\n  setAverageViewsPerLot: (data: number) => void;\r\n  setBadRequest: (arg: RequestResult) => void;\r\n}\r\n\r\nfunction LoadStatisticServices(props: ILoadStatisticServicesProps){\r\n\r\n  GetService.request(\r\n      ConnectionConfig.ServerUrl + \"Agreement/GetQuantity\"\r\n    ).then((response) => {\r\n      if (response.data === null) {\r\n        props.setBadRequest(({show: true, message: \"agreements quantity weren't loaded\"}));\r\n      } else {\r\n        var data = response.data;\r\n        props.setAgreementsQuantity(data);\r\n        // console.log(data);\r\n      }\r\n    });\r\n\r\n    GetService.request(\r\n      ConnectionConfig.ServerUrl + \"Lot/GetQuantity\"\r\n    ).then((response) => {\r\n      if (response.data === null) {\r\n        props.setBadRequest(({show: true, message: \"lots quantity weren't loaded\"}));\r\n      } else {\r\n        var data = response.data;\r\n        props.setLotsQuantity(data);\r\n        // console.log(data);\r\n      }\r\n    });\r\n  \r\n    GetService.request(\r\n      ConnectionConfig.ServerUrl + \"Bid/GetQuantity\"\r\n    ).then((response) => {\r\n      if (response.data === null) {\r\n        props.setBadRequest(({show: true, message: \"bids quantity weren't loaded\"}));\r\n      } else {\r\n        var data = response.data;\r\n        props.setBidsQuantity(data);\r\n        // console.log(data);\r\n      }\r\n    });\r\n\r\n    GetService.request(\r\n      ConnectionConfig.ServerUrl + \"Lot/GetAverageViewsPerLot\"\r\n    ).then((response) => {\r\n      if (response.data === null) {\r\n        props.setBadRequest(({show: true, message: \"average views per lot quantity weren't loaded\"}));\r\n      } else {\r\n        var data = response.data;\r\n        props.setAverageViewsPerLot(data);\r\n        // console.log(data);\r\n      }\r\n    });\r\n}\r\n\r\nexport default LoadStatisticServices","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\StatisticCharts\\Components\\Chart.tsx",["370"],"import React, { useEffect, useState } from \"react\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"highcharts\";\r\n\r\nimport style from \"./ChartStyle.module.sass\";\r\n\r\nimport { Quantity } from \"../../../Components/Types/Quantity\";\r\n\r\ninterface IChartProps {\r\n  quantity: Quantity;\r\n}\r\n\r\nfunction Chart(props: IChartProps) {\r\n  useEffect(() => {\r\n    console.log(props.quantity);\r\n  });\r\n\r\n  const [chartOptions, setChartOptions] = useState({});\r\n  const [viewsChartOptions, setViewsChartOptions] = useState({});\r\n\r\n  useEffect(() => {\r\n    afterChartCreated();\r\n    afterViewsChartCreated();\r\n  }, [props.quantity]);\r\n\r\n  const afterChartCreated = () => {\r\n    const chart: Highcharts.Options = {\r\n      chart: {\r\n        type: \"column\",\r\n      },\r\n      title: {\r\n        align: \"center\",\r\n        text: \"Activity\",\r\n      },\r\n      subtitle: {\r\n        align: \"center\",\r\n        text: \"activity on the site\",\r\n      },\r\n      accessibility: {\r\n        announceNewData: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: \"Quantity\",\r\n        },\r\n      },\r\n      legend: {\r\n        enabled: false,\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          borderWidth: 0,\r\n          dataLabels: {\r\n            enabled: true,\r\n            format: \"{point.y:.1f}\",\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n        pointFormat:\r\n          '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}</b> of total<br/>',\r\n      },\r\n\r\n      series: [\r\n        {\r\n          name: \"Browsers\",\r\n          colorByPoint: true,\r\n          type: \"column\",\r\n          data: [\r\n            { name: \"Lots\", y: props.quantity.lots },\r\n            { name: \"Agreements\", y: props.quantity.agreements },\r\n            { name: \"Bids\", y: props.quantity.bids },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    setChartOptions(chart);\r\n  };\r\n\r\n  const afterViewsChartCreated = () => {\r\n    const chart: Highcharts.Options = {\r\n      chart: {\r\n        type: \"column\",\r\n      },\r\n      title: {\r\n        align: \"center\",\r\n        text: \"Views\",\r\n      },\r\n      subtitle: {\r\n        align: \"center\",\r\n        text: \"views per each lot\",\r\n      },\r\n      accessibility: {\r\n        announceNewData: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: \"Quantity\",\r\n        },\r\n      },\r\n      legend: {\r\n        enabled: false,\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          borderWidth: 0,\r\n          dataLabels: {\r\n            enabled: true,\r\n            format: \"{point.y:.1f}\",\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n        pointFormat:\r\n          '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}</b> of total<br/>',\r\n      },\r\n\r\n      series: [\r\n        {\r\n          name: \"Browsers\",\r\n          colorByPoint: true,\r\n          type: \"column\",\r\n          data: [\r\n            {\r\n              name: \"lots quantity\",\r\n              y: props.quantity.lots,\r\n            },\r\n            {\r\n              name: \"avarage lot wieves\",\r\n              y: props.quantity.averageViewsPerLot,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    setViewsChartOptions(chart);\r\n  };\r\n\r\n  return (\r\n    <div className={style.chart_container}>\r\n      {chartOptions ? (\r\n        <HighchartsReact className={style.chart_style} highcharts={Highcharts} options={chartOptions} />\r\n      ) : (\r\n        <p>No data</p>\r\n      )}\r\n\r\n      {viewsChartOptions ? (\r\n        <HighchartsReact className={style.chart_style} highcharts={Highcharts} options={viewsChartOptions} />\r\n      ) : (\r\n        <p>No data</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotListPage\\Services\\LoadLotsService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\Components\\ProfileForm.tsx",["371","372"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ProfileForm.sass\";\r\n\r\nimport { Container, Form, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nimport { Trans } from \"react-i18next\";\r\nimport LoadProfileInfoService from \"../Services/LoadProfileInfoService\";\r\nimport { InfoData } from \"../../../Components/Types/InfoData\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport connection from \"../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\nimport LoadProfileInfoByIdService from \"../Services/LoadProfileInfoByIdService\";\r\n\r\ninterface ProfileFormProps {\r\n  isReadOnly?: boolean;\r\n  id: string;\r\n}\r\n\r\nfunction ProfileForm(props: ProfileFormProps) {\r\n  const [formState, setFormState] = useState({\r\n    passwordVisible: false,\r\n    confirmPassword: false,\r\n    submitButtonActive: false,\r\n    validated: false,\r\n    serverMessage: \"\",\r\n    requestCompleted: false,\r\n  });\r\n\r\n  const [confirmPasswordState, setConfirmPasswordState] = useState({\r\n    password: \"\",\r\n    passwordVisible: false,\r\n  });\r\n\r\n  const [fieldsStateCash, setFieldsStateCash] = useState<InfoData>({\r\n    name: \"\",\r\n    surname: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [fieldsState, setFieldsState] = useState<InfoData>({\r\n    name: \"\",\r\n    surname: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [fieldsModifiedState, setFieldsModifiedState] = useState({\r\n    name: false,\r\n    surname: false,\r\n    phoneNumber: false,\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.isReadOnly) {\r\n      LoadProfileInfoByIdService({\r\n        setFieldsState: setFieldsState,\r\n        setFieldsStateCash: setFieldsStateCash,\r\n        id: props.id,\r\n      });\r\n    } else {\r\n      LoadProfileInfoService({\r\n        setFieldsState: setFieldsState,\r\n        setFieldsStateCash: setFieldsStateCash,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFieldsModifiedState(() => {\r\n      return {\r\n        name: fieldsState.name !== fieldsStateCash.name,\r\n        surname: fieldsState.surname !== fieldsStateCash.surname,\r\n        phoneNumber: fieldsState.phoneNumber !== fieldsStateCash.phoneNumber,\r\n        email: fieldsState.email !== fieldsStateCash.email,\r\n        password: Boolean(fieldsState.password),\r\n      };\r\n    });\r\n  }, [fieldsState]);\r\n\r\n  useEffect(() => {\r\n    setFormState((prev) => {\r\n      return {\r\n        ...prev,\r\n        submitButtonActive: Object.values(fieldsModifiedState).includes(true),\r\n        confirmPassword:\r\n          fieldsModifiedState.phoneNumber ||\r\n          fieldsModifiedState.email ||\r\n          fieldsModifiedState.password,\r\n      };\r\n    });\r\n    // formState.submitButtonActive = !formState.submitButtonActive;\r\n  }, [fieldsModifiedState]);\r\n\r\n  const nameValidPattern = \"[а-яА-ЯёЁіІїЇєЄa-zA-Z]{2,20}$\";\r\n  const surnameValidPattern = \"[а-яА-ЯёЁіІїЇєЄa-zA-Z]{2,20}$\";\r\n  const phoneValidPattern = \"^\\\\+380[0-9]{9}$\";\r\n  const passwordValidPattern =\r\n    \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}:;<>,.?~_+-=|]).{10,25}$\";\r\n\r\n  function checkDataChanges(update: {\r\n    name?: string;\r\n    surname?: string;\r\n    phoneNumber?: string;\r\n    email?: string;\r\n    password?: string;\r\n  }) {\r\n    setFieldsState((prev) => {\r\n      return {\r\n        ...prev,\r\n        ...update,\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event: {\r\n    preventDefault: () => void;\r\n    currentTarget: { checkValidity: () => any };\r\n  }) {\r\n    event.preventDefault();\r\n\r\n    setFormState((prev) => {\r\n      return { ...prev, validated: true };\r\n    });\r\n\r\n    const isFormValid = event.currentTarget.checkValidity();\r\n\r\n    if (isFormValid) {\r\n      let requests = [];\r\n\r\n      let currentData = fieldsState;\r\n\r\n      if (fieldsModifiedState.name || fieldsModifiedState.surname) {\r\n        requests.push(\r\n          axios({\r\n            url: connection.ServerUrl + connection.Routes.UpdateProfileInfo,\r\n            method: \"PUT\",\r\n            data: {\r\n              name: currentData.name,\r\n              surname: currentData.surname,\r\n            },\r\n            headers: {\r\n              \"Content-type\": \"application/json; charset=UTF-8\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          })\r\n        );\r\n      }\r\n\r\n      if (fieldsModifiedState.phoneNumber) {\r\n        requests.push(\r\n          axios({\r\n            url: connection.ServerUrl + connection.Routes.UpdateProfilePhone,\r\n            method: \"PUT\",\r\n            data: {\r\n              newPhoneNumber: currentData.phoneNumber,\r\n              currentPassword: confirmPasswordState.password,\r\n            },\r\n            headers: {\r\n              \"Content-type\": \"application/json; charset=UTF-8\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          })\r\n        );\r\n      }\r\n\r\n      if (fieldsModifiedState.email) {\r\n        requests.push(\r\n          axios({\r\n            url: connection.ServerUrl + connection.Routes.UpdateProfileEmail,\r\n            method: \"PUT\",\r\n            data: {\r\n              newEmail: currentData.email,\r\n              currentPassword: confirmPasswordState.password,\r\n            },\r\n            headers: {\r\n              \"Content-type\": \"application/json; charset=UTF-8\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          })\r\n        );\r\n      }\r\n\r\n      if (fieldsModifiedState.password) {\r\n        requests.push(\r\n          axios({\r\n            url: connection.ServerUrl + connection.Routes.UpdateProfilePassword,\r\n            method: \"PUT\",\r\n            data: {\r\n              newPassword: currentData.password,\r\n              currentPassword: confirmPasswordState.password,\r\n            },\r\n            headers: {\r\n              \"Content-type\": \"application/json; charset=UTF-8\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          })\r\n        );\r\n      }\r\n\r\n      if (requests.length > 0) {\r\n        Promise.all(requests)\r\n          .then((responses) => {\r\n            let statusCodeArray: number[] = [];\r\n\r\n            responses.map((value) => statusCodeArray.push(value.status));\r\n\r\n            if (statusCodeArray.every((value) => value === 200)) {\r\n              setFieldsStateCash({\r\n                name: currentData.name,\r\n                surname: currentData.surname,\r\n                phoneNumber: currentData.phoneNumber,\r\n                email: currentData.email,\r\n                password: \"\",\r\n              });\r\n\r\n              setFieldsState(() => {\r\n                return {\r\n                  ...currentData,\r\n                  password: \"\",\r\n                };\r\n              });\r\n\r\n              setFormState((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  serverMessage: \"Success\",\r\n                  requestCompleted: true,\r\n                };\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            if (error.response) {\r\n              setFormState((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  serverMessage: error.response.data,\r\n                  requestCompleted: false,\r\n                };\r\n              });\r\n            } else {\r\n              setFormState((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  serverMessage: \"Connection error\",\r\n                  requestCompleted: false,\r\n                };\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"fieldsState\", fieldsState);\r\n  });\r\n\r\n  return (\r\n    <Container className=\"profile-form-container\">\r\n      <Form\r\n        className=\"m-0 profile-form\"\r\n        noValidate\r\n        validated={formState.validated}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <p className=\"fw-bolder fs-2\">Profile</p>\r\n        <div\r\n          className={`message-container ${\r\n            Boolean(formState.serverMessage) ? \"visible\" : \"hidden\"\r\n          }  ${\r\n            formState.requestCompleted ? \"successResponse\" : \"errorResponse\"\r\n          }`}\r\n        >\r\n          {formState.serverMessage}\r\n        </div>\r\n        <Form.Group className=\"mb-3 mt-5\">\r\n          <Form.Label>\r\n            <Trans i18nKey=\"Name\">Name</Trans>\r\n          </Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              value={fieldsState.name}\r\n              onChange={(event) =>\r\n                checkDataChanges({ name: event.target.value })\r\n              }\r\n              className=\"ig-form-control\"\r\n              type=\"text\"\r\n              pattern={nameValidPattern}\r\n              maxLength={20}\r\n              required\r\n              disabled={props.isReadOnly}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              <Trans i18nKey=\"InvalidName\">InvalidName</Trans>\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>\r\n            <Trans i18nKey=\"SurName\">Surname</Trans>\r\n          </Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              value={fieldsState.surname}\r\n              onChange={(event) =>\r\n                checkDataChanges({ surname: event.target.value })\r\n              }\r\n              className=\"ig-form-control\"\r\n              type=\"text\"\r\n              pattern={surnameValidPattern}\r\n              maxLength={20}\r\n              required\r\n              disabled={props.isReadOnly}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              <Trans i18nKey=\"InvalidSurName\">InvalidSurname</Trans>\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>\r\n            <Trans i18nKey=\"Phone\">Phone number</Trans>\r\n          </Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              value={fieldsState.phoneNumber}\r\n              onChange={(event) =>\r\n                checkDataChanges({ phoneNumber: event.target.value })\r\n              }\r\n              className=\"ig-form-control\"\r\n              type=\"text\"\r\n              maxLength={13}\r\n              pattern={phoneValidPattern}\r\n              required\r\n              disabled={props.isReadOnly}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              <Trans i18nKey=\"InvalidPhone\">invalid Phone number</Trans>\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>\r\n            <Trans i18nKey=\"Email\">Email</Trans>\r\n          </Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              value={fieldsState.email}\r\n              onChange={(event) =>\r\n                checkDataChanges({ email: event.target.value })\r\n              }\r\n              className=\"ig-form-control\"\r\n              type=\"email\"\r\n              maxLength={20}\r\n              required\r\n              disabled={props.isReadOnly}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              <Trans i18nKey=\"InvalidEmail\">invalid Email</Trans>\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {!props.isReadOnly && (\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <Trans i18nKey=\"NewPassword\">NewPassword</Trans>\r\n            </Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                value={fieldsState.password}\r\n                onChange={(event) =>\r\n                  checkDataChanges({ password: event.target.value })\r\n                }\r\n                className=\"ig-form-control\"\r\n                type={formState.passwordVisible === true ? \"text\" : \"password\"}\r\n                pattern={passwordValidPattern}\r\n                maxLength={30}\r\n                disabled={props.isReadOnly}\r\n              />\r\n              <i\r\n                onClick={() =>\r\n                  setFormState((prev) => {\r\n                    return { ...prev, passwordVisible: !prev.passwordVisible };\r\n                  })\r\n                }\r\n                className={\r\n                  formState.passwordVisible\r\n                    ? \"bi bi-eye fs-4 eye-icon\"\r\n                    : \"bi bi-eye-slash fs-4 eye-icon\"\r\n                }\r\n                style={{ marginLeft: \"10px\" }}\r\n              ></i>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                <Trans i18nKey=\"InvalidNewPassword\">invalid new password</Trans>\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        )}\r\n\r\n        {formState.confirmPassword ? (\r\n          <div>\r\n            <Form.Group className=\"mb-1\">\r\n              <Form.Label>\r\n                *<Trans i18nKey=\"CurrentPassword\">Current password</Trans>\r\n              </Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  value={confirmPasswordState.password}\r\n                  onChange={(event) =>\r\n                    setConfirmPasswordState((prev) => {\r\n                      return { ...prev, password: event.target.value };\r\n                    })\r\n                  }\r\n                  className=\"ig-form-control\"\r\n                  type={\r\n                    confirmPasswordState.passwordVisible === true\r\n                      ? \"text\"\r\n                      : \"password\"\r\n                  }\r\n                  pattern={passwordValidPattern}\r\n                  maxLength={30}\r\n                  required\r\n                  disabled={props.isReadOnly}\r\n                />\r\n                <i\r\n                  onClick={() =>\r\n                    setConfirmPasswordState((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        passwordVisible: !prev.passwordVisible,\r\n                      };\r\n                    })\r\n                  }\r\n                  className={\r\n                    confirmPasswordState.passwordVisible\r\n                      ? \"bi bi-eye fs-4 eye-icon\"\r\n                      : \"bi bi-eye-slash fs-4 eye-icon\"\r\n                  }\r\n                  style={{ marginLeft: \"10px\" }}\r\n                ></i>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  <Trans i18nKey=\"InvalidCurrentPassword\">\r\n                    invalid current password\r\n                  </Trans>\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </div>\r\n        ) : null}\r\n        <Form.Group className=\"mt-4 text-center\">\r\n          {!props.isReadOnly && (\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"submit-button\"\r\n              disabled={!formState.submitButtonActive || props.isReadOnly}\r\n            >\r\n              <Trans i18nKey=\"SubmitButtonText\">Submit</Trans>\r\n            </Button>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\UpdateLotViewsService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\LoadDetailLotInfoService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\LoadPriceCoefService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\LoadBidsService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Service\\LoadPaymentService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\LotCard\\LotCardDeck\\LotCardDeck.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\BuyLot\\BuyLot.tsx",["373"],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Trans } from \"react-i18next\";\r\n\r\nimport CountdownTimer from \"../../../../../Components/TimeCounter/CountdownTimer\";\r\nimport { CreateAgreement } from \"../../../../../Components/Types/Agreement\";\r\n\r\nimport { DetailedLot } from \"../../../../../Components/Types/Lot\";\r\nimport CreateNewAgreementService from \"../../Services/CreateNewAgreementService\";\r\n\r\nimport style from \"./BuyLotStyle.module.sass\";\r\nimport { CreateBid } from \"../../../../../Components/Types/Bid\";\r\nimport PlaceBidService from \"../../Services/PlaceBidService\";\r\nimport { RequestResult } from \"../../../../../Components/Types/RequestResult\";\r\n\r\ninterface BuyLotProps {\r\n  lotInfo: DetailedLot;\r\n  remainingTime: string;\r\n  setGoodRequest: (arg: RequestResult) => void;\r\n  setBadRequest: (arg: RequestResult) => void;\r\n}\r\n\r\nfunction BuyLot(props: BuyLotProps) {\r\n\r\n  const [showWindow, setShowWindow] = useState<{\r\n    bid: boolean;\r\n    buy: boolean;\r\n  }>({ bid: false, buy: false });\r\n\r\n  const [bid, setBid] = useState<CreateBid>({\r\n    lotId: props.lotInfo.id,\r\n    value: props.lotInfo.bids\r\n      ? props.lotInfo.bids[props.lotInfo.bids.length - 1].value +\r\n        props.lotInfo.minBidStep\r\n      : props.lotInfo.minBidPrice,\r\n  });\r\n\r\n  const [expired, setExpired] = useState<boolean>(false);\r\n\r\n  const [agreement, setAgreement] = useState<CreateAgreement>({\r\n    lotId: props.lotInfo.id,\r\n    description: \"\",\r\n    startDate: new Date().toISOString(),\r\n    endDate: new Date().toISOString(),\r\n  });\r\n\r\n  const BuyLot = () => {\r\n    console.log(agreement);\r\n    CreateNewAgreementService({ agreement: agreement });\r\n    props.setGoodRequest({\r\n      show: true,\r\n      message: \"buy request created\",\r\n    });\r\n  };\r\n\r\n  const PlaceBid = () => {\r\n    var res = PlaceBidService({ bid: bid });\r\n    if (res) {\r\n      props.setGoodRequest({\r\n        show: res,\r\n        message: \"bid created\",\r\n      });\r\n    } else {\r\n      props.setBadRequest({\r\n        show: res,\r\n        message: \"something went wrong\",\r\n      });\r\n    }\r\n    setShowWindow((prev) => ({ ...prev, bid: false }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        style={{ display: \"flex\", marginTop: \"10%\" }}\r\n        show={showWindow.bid}\r\n        getOpenState={(e: any) => {\r\n          setShowWindow((prev) => ({ ...prev, bid: e }));\r\n        }}\r\n        tabIndex=\"-1\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title style={{ justifyContent: \"center\" }}>\r\n            <div className={style.modal_header}>\r\n              <p>\r\n                <Trans i18nKey=\"LotViewBodyApproveBid\">BodyApproveBid</Trans>\r\n              </p>\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p className={style.modal_text}>\r\n            <Trans i18nKey=\"LotViewBodyApproveBidDescription\">\r\n              LotViewBodyApproveBidDescription\r\n            </Trans>\r\n          </p>\r\n          <div>\r\n            <p>\r\n              {props.lotInfo.bids\r\n                ? `Current bid winner is ${\r\n                    props.lotInfo.bids[props.lotInfo.bids.length - 1].value\r\n                  }$ your bid should be higher on ${props.lotInfo.minBidStep}$`\r\n                : `Minimum bid: ${props.lotInfo.minBidPrice}$`}\r\n            </p>\r\n\r\n            <div\r\n              className={style.bid_input_container}\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <label>bid</label>\r\n              <input\r\n                className={style.input_style}\r\n                type=\"number\"\r\n                min={\r\n                  props.lotInfo.bids\r\n                    ? props.lotInfo.bids[props.lotInfo.bids.length - 1].value\r\n                    : props.lotInfo.minBidPrice\r\n                }\r\n                max=\"50000000000\"\r\n                id=\"flexCheckDefault\"\r\n                step={props.lotInfo.minBidStep}\r\n                name=\"minBidPrice\"\r\n                value={bid.value}\r\n                onChange={(e) => {\r\n                  setBid((prev) => ({\r\n                    ...prev,\r\n                    value: Number(e.target.value),\r\n                  }));\r\n                }}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                minimum bid price\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              PlaceBid();\r\n            }}\r\n          >\r\n            <Trans i18nKey=\"FooterContinue\">FooterContinue</Trans>\r\n          </Button>\r\n          <div className=\"vr\" />\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              setShowWindow((prev) => ({ ...prev, bid: false }));\r\n            }}\r\n          >\r\n            <Trans i18nKey=\"FooterCancel\">FooterCancel</Trans>\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className={style.auction_text_style}>\r\n        <label className={style.text_info_style}>\r\n          {props.lotInfo.bids && props.lotInfo.bids.length > 0\r\n            ? \"Highest bid is \" +\r\n              props.lotInfo.bids[props.lotInfo.bids.length - 1].value\r\n            : \"Minimum bid: \" + props.lotInfo.minBidPrice}\r\n          {\" or Buy it now for \" + props.lotInfo.buyPrice}\r\n        </label>\r\n        <div>\r\n          <label className={style.text_style}>Your Pick</label>\r\n\r\n          <div className={style.auction_options_style}>\r\n            <div className={style.bid_container}>\r\n              <CountdownTimer\r\n                targetDate={new Date(props.remainingTime)}\r\n                setExpired={setExpired}\r\n              />\r\n              <label className={style.bids_count_style}>\r\n                {props.lotInfo.bids\r\n                  ? props.lotInfo.bids.length + \". bids\"\r\n                  : \"0 bids\"}\r\n              </label>\r\n            </div>\r\n            <Button\r\n              className={style.button_style}\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                setShowWindow((prev) => ({ ...prev, bid: true }));\r\n              }}\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                borderColor: \"#2f6d31\",\r\n              }}\r\n              disabled={expired ? true : false}\r\n            >\r\n              <Trans i18nKey=\"LotViewPlaceBid\">PlaceBid</Trans>\r\n            </Button>\r\n            <Button\r\n              className={style.button_style}\r\n              variant=\"primary\"\r\n              onClick={BuyLot}\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                borderColor: \"#2f6d31\",\r\n              }}\r\n              disabled={expired ? true : false}\r\n            >\r\n              <Trans i18nKey=\"LotViewBuyNow\">BuyNow</Trans>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuyLot;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\RentLot\\RentLot.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Image\\ImageCarousel\\LotImageCarousel.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\LotCard\\LotCard\\Service\\LoadImagesService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\MyLotAgreementsListAsCustomer\\MyLotAgreementsListAsCustomer.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Components\\Table\\Tbody.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\MyLotAgreementsList\\MyLotAgreementsList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Components\\Table\\TheaderList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\UserListPage\\AddUser\\Form.js",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Layouts\\Header\\Header.jsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Services\\encodeFile.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\NewLot\\Component\\PriceCoefTable\\TableElement.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\Search\\Search.tsx",["374","375"],"import { useCallback } from \"react\";\r\n\r\nimport { PanTool } from \"@material-ui/icons\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\n\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\nimport style from \"./Search.module.sass\";\r\n\r\ninterface SearchProps {\r\n  panTo: ({ lat, lng }: any) => void;\r\n}\r\n\r\nexport default function Search(props: SearchProps) {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: new google.maps.LatLng({\r\n        lat: 43.6532225,\r\n        lng: -79.383186,\r\n      }),\r\n      radius: 200 * 1000,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={style.search}>\r\n      <Combobox\r\n        onSelect={async (address) => {\r\n          setValue(address, false);\r\n          clearSuggestions();\r\n\r\n          try {\r\n            const geocodeResult = await getGeocode({ address });\r\n\r\n            //using this promice you can get the location data(full address and coordinates)\r\n            console.log(await getLatLng(geocodeResult[0]))\r\n            const { lat, lng } = await getLatLng(geocodeResult[0]);\r\n\r\n            props.panTo({ lat, lng });\r\n          } catch (error) {\r\n            console.log(\"error! \", error);\r\n          }\r\n        }}\r\n      >\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n          }}\r\n          disabled={!ready}\r\n          placeholder={\"Enter the address\"}\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Map\\Locate\\Locate.tsx",["376"],"import compass from \"../../../Assets/Images/icons/compass.svg\";\r\n\r\nimport useMapContext from \"../useMapContext\";\r\n\r\nimport \"./Locate.sass\";\r\n\r\ninterface LocateProps {\r\n  panTo: ({ lat, lng }: any) => void;\r\n}\r\n\r\nexport default function Locate(props: LocateProps) {\r\n  const { setLocation } = useMapContext();\r\n  return (\r\n    <button\r\n      className=\"locate\"\r\n      onClick={() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            props.panTo({\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            });\r\n            console.log(\"position\", position);\r\n          },\r\n          () => null);\r\n      }}\r\n    >\r\n      <img src={compass} alt=\"compass - locate me\" />\r\n    </button>\r\n  );\r\n}\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\Services\\LoadProfileInfoService.tsx",["377"],"import React  from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport connection from \"../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\nimport { InfoData } from \"../../../Components/Types/InfoData\";\r\n\r\ninterface LoadProfileInfoServiceProps {\r\n  setFieldsStateCash: (arg: InfoData) => void;\r\n  setFieldsState: (arg: InfoData) => void;\r\n}\r\n\r\nfunction LoadProfileInfoService(props: LoadProfileInfoServiceProps) {\r\n  axios({\r\n    url: connection.ServerUrl + connection.Routes.GetProfileInfo,\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  }).then((request) => {\r\n    let infoData = request.data;\r\n\r\n    let tempInfoData: InfoData = {\r\n      name: infoData.name,\r\n      surname: infoData.surname,\r\n      phoneNumber: infoData.phoneNumber,\r\n      email: infoData.email,\r\n      password: \"\",\r\n    };\r\n\r\n    props.setFieldsStateCash(tempInfoData);\r\n    props.setFieldsState(tempInfoData);\r\n  });\r\n}\r\n\r\nexport default LoadProfileInfoService;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\ProfilePage\\Services\\LoadProfileInfoByIdService.tsx",["378"],"import React  from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport connection from \"../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\nimport { InfoData } from \"../../../Components/Types/InfoData\";\r\n\r\ninterface LoadProfileInfoByIdServiceProps {\r\n  setFieldsStateCash: (arg: InfoData) => void;\r\n  setFieldsState: (arg: InfoData) => void;\r\n  id: string;\r\n}\r\n\r\nfunction LoadProfileInfoByIdService(props: LoadProfileInfoByIdServiceProps) {\r\n  axios({\r\n    url: connection.ServerUrl + \"Profile/info/getById\" +\r\n    \"?userId=\" +\r\n    props.id,\r\n\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  }).then((request) => {\r\n    let infoData = request.data;\r\n\r\n    let tempInfoData: InfoData = {\r\n      name: infoData.name,\r\n      surname: infoData.surname,\r\n      phoneNumber: infoData.phoneNumber,\r\n      email: infoData.email,\r\n      password: \"\",\r\n    };\r\n\r\n    props.setFieldsStateCash(tempInfoData);\r\n    props.setFieldsState(tempInfoData);\r\n  });\r\n}\r\n\r\nexport default LoadProfileInfoByIdService;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Services\\GetService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Services\\PutService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\PaymentList\\Components\\Table\\TableElement.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Message\\GoodRequest.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\Table\\Tbody.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\Table\\TheaderList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\MyLotAgreementsListAsCustomer\\PayForAgreement\\PayForAgreement.tsx",[],["379","380"],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\SelectPriceCoefService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\CreateNewAgreementService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AgreementManagement\\AgreementListPage\\Components\\Table\\TableElement.tsx",["381"],"import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport LinkConfig from \"../../../../../../Assets/jsonData/LinkConfig/LinkConfig.json\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { TableAgreement } from \"../../../../../../Components/Types/Agreement\";\r\nimport { Trans } from \"react-i18next\";\r\nimport Payment from \"../../../../../../Components/Payment/Payment\";\r\nimport { RequestResult } from \"../../../../../../Components/Types/RequestResult\";\r\n\r\ninterface TableElementProps {\r\n  index: number;\r\n  elementData: TableAgreement;\r\n  setApproveState: () => void;\r\n  setDisApproveState: () => void;\r\n  setAgreementNumber: (arg: number) => void;\r\n  isCustomer?: boolean;\r\n  setGoodRequest: (arg: RequestResult) => void;\r\n  setBadRequest: (arg: RequestResult) => void;\r\n}\r\n\r\nfunction TableElement(props: TableElementProps) {\r\n  const [showPayment, setShowPayment] = useState<boolean>(false);\r\n\r\n  const disApproveToggleShow = (number: number) => {\r\n    props.setDisApproveState();\r\n    props.setAgreementNumber(number);\r\n  };\r\n\r\n  const approveToggleShow = (number: number) => {\r\n    props.setApproveState();\r\n    props.setAgreementNumber(number);\r\n  };\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <td>{props.elementData.number}</td>\r\n      <td>\r\n        {props.elementData && props.elementData.lotId && (\r\n          <Link\r\n            to={{\r\n              pathname:\r\n                LinkConfig.lot_management.lot + `/${props.elementData.lotId}`,\r\n              state: { lotId: `${props.elementData.lotId}` },\r\n            }}\r\n          >\r\n            Lot\r\n          </Link>\r\n        )}\r\n      </td>\r\n      {!props.isCustomer && (\r\n        <td>\r\n          {props.elementData && props.elementData.customerId && (\r\n            <Link\r\n              to={{\r\n                pathname: \"/profile\" + `/${props.elementData.customerId}`,\r\n                state: { id: `${props.elementData.customerId}` },\r\n              }}\r\n            >\r\n              Customer\r\n            </Link>\r\n          )}\r\n        </td>\r\n      )}\r\n      <td>{props.elementData.description}</td>\r\n      <td>{props.elementData.status}</td>\r\n      <td>\r\n        {props.elementData.creationDate\r\n          .substring(0, props.elementData.creationDate.indexOf(\".\"))\r\n          .replace(\"T\", \" \")}\r\n      </td>\r\n      <td>\r\n        {props.elementData.startDate\r\n          .substring(0, props.elementData.startDate.indexOf(\".\"))\r\n          .replace(\"T\", \" \")}\r\n      </td>\r\n      <td>\r\n        {props.elementData.endDate\r\n          .substring(0, props.elementData.endDate.indexOf(\".\"))\r\n          .replace(\"T\", \" \")}\r\n      </td>\r\n      <td>{props.elementData.price}</td>\r\n      {props.isCustomer && (\r\n        <td>\r\n          {props.elementData && props.elementData.customerId && (\r\n            <Link\r\n              to={{\r\n                pathname:\r\n                  LinkConfig.lot_management.agreement.payments +\r\n                  `/${props.elementData.id}`,\r\n                state: { agreementId: `${props.elementData.id}` },\r\n              }}\r\n            >\r\n              <Trans i18nKey=\"Payments\">Payments</Trans>\r\n            </Link>\r\n          )}\r\n        </td>\r\n      )}\r\n      {!props.isCustomer ? (\r\n        <td>\r\n          <Button\r\n            onClick={() =>\r\n              !props.elementData.isApprove\r\n                ? approveToggleShow(props.index)\r\n                : null\r\n            }\r\n            variant=\"dark\"\r\n            disabled={props.elementData.isDisApprove ? true : false}\r\n          >\r\n            <Trans i18nKey=\"HeaderApprove\">HeaderApprove</Trans>\r\n          </Button>\r\n        </td>\r\n      ) : (\r\n        <div>\r\n          <td>\r\n            <Payment\r\n              setGoodRequest={props.setGoodRequest}\r\n              setBadRequest={props.setBadRequest}\r\n              show={showPayment}\r\n              setShowPayment={setShowPayment}\r\n              AgreementId={props.elementData.id}\r\n              Price={props.elementData.price}\r\n            />\r\n            <Button\r\n              onClick={() => {\r\n                setShowPayment(!showPayment);\r\n              }}\r\n              variant=\"dark\"\r\n              disabled={props.elementData.isDisApprove ? true : false}\r\n            >\r\n              <Trans i18nKey=\"PayForAgreement\">PayForAgreement</Trans>\r\n            </Button>\r\n          </td>\r\n        </div>\r\n      )}\r\n      <td>\r\n        <Button\r\n          onClick={() =>\r\n            !props.elementData.isDisApprove\r\n              ? disApproveToggleShow(props.index)\r\n              : null\r\n          }\r\n          variant=\"dark\"\r\n          disabled={props.elementData.isApprove ? true : false}\r\n        >\r\n          <Trans i18nKey=\"HeaderDisapprove\">HeaderDisapprove</Trans>\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableElement;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Payment.tsx",["382","383"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport { Trans } from \"react-i18next\";\r\nimport { RequestResult } from \"../Types/RequestResult\";\r\nimport BraintreeDropIn from \"./Components/BraintreeDropIn/BraintreeDropIn\";\r\n\r\ninterface PaymentProps {\r\n  show: boolean;\r\n  setShowPayment: (arg: boolean) => void;\r\n  AgreementId: string;\r\n  Price: number;\r\n  setGoodRequest: (arg: RequestResult) => void;\r\n  setBadRequest: (arg: RequestResult) => void;\r\n}\r\n\r\nfunction Payment(props: PaymentProps) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        style={{ display: \"flex\", marginTop: \"10%\" }}\r\n        show={props.show}\r\n        tabIndex=\"-1\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <Trans i18nKey=\"Payment\">Payment</Trans>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Trans i18nKey=\"PaymentDescription\">\r\n            You're agoing to make a payment for agreement\r\n          </Trans>\r\n          <BraintreeDropIn\r\n            setGoodRequest={props.setGoodRequest}\r\n            setBadRequest={props.setBadRequest}\r\n            show={true}\r\n            onPaymentCompleted={props.setShowPayment}\r\n            AgreementId={props.AgreementId}\r\n            Price={props.Price}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"vr\" />\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              props.setShowPayment(!props.show);\r\n            }}\r\n          >\r\n            <Trans i18nKey=\"FooterCancel\">FooterCancel</Trans>\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Components\\BraintreeDropIn\\BraintreeDropIn.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\Table\\Tbody.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\Table\\TheaderList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Services\\PlaceBidService.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\LotCard\\LotCard\\LotCard.tsx",["384"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport Coll from \"react-bootstrap/Col\";\r\n\r\nimport LinkConfig from \"../../../Assets/jsonData/LinkConfig/LinkConfig.json\";\r\nimport { SimpleLot } from \"../../Types/Lot\";\r\nimport { LotImage } from \"../../Types/LotImage\";\r\nimport LotImageCarousel from \"../../Image/ImageCarousel/LotImageCarousel\";\r\nimport LoadImagesService from \"./Service/LoadImagesService\";\r\nimport style from \"./LotCardStyle.module.sass\";\r\nimport React from \"react\";\r\n\r\ninterface lotCardProps {\r\n  lot: SimpleLot;\r\n}\r\n\r\nexport default function LotCard(props: lotCardProps) {\r\n  let history = useHistory();\r\n  const [imageArray, setImageArray] = useState<LotImage[]>([]);\r\n\r\n  const viewLot = () => {\r\n    history.push({\r\n      pathname: LinkConfig.lot_management.lot + `/${props.lot.id}`,\r\n      state: { lotId: `${props.lot.id}` },\r\n    });\r\n  };\r\n\r\n  const lot = props.lot;\r\n\r\n  let d = new Date(lot.publicationDate);\r\n  let ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\r\n  let mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(d);\r\n  let da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\r\n\r\n  useEffect(() => {\r\n    if (props.lot.id) {\r\n      LoadImagesService({\r\n        lotId: props.lot.id,\r\n        setImageArray: (arg: LotImage[]) => {\r\n          setImageArray(arg);\r\n        },\r\n      });\r\n    }\r\n  }, [props.lot]);\r\n\r\n  console.log(props.lot);\r\n\r\n  return (\r\n    <Card\r\n      bg=\"\"\r\n      border=\"success\"\r\n      style={{    \r\n        backgroundColor: \"RGB(250, 250, 250, 0.823)\",\r\n        margin: \"1em\", \r\n        marginLeft: \"auto\", \r\n        marginRight: \"auto\", \r\n        textAlign: \"center\",   \r\n        borderRadius: \"20px\"\r\n      }}\r\n      onClick={viewLot}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          {imageArray && imageArray.length > 0 && (\r\n            <LotImageCarousel imgArray={imageArray} />\r\n          )}\r\n        </Col>\r\n        <Coll style={{marginTop: \"2rem\"}} className={style.card_col_block}>\r\n          <Card.Title style={{fontSize: \"30px\"}}>{lot.header}</Card.Title>\r\n          <Card.Text className=\"ml-3\">\r\n            {\"Publiction date: \" + `${da} ${mo} ${ye}`}\r\n          </Card.Text>\r\n          <Card.Text style={{fontSize: \"20px\"}} className=\"ml-3\">\r\n            {lot.isAuction ? \"Auction\" : lot.isRent && \"Rent\"}\r\n          </Card.Text>\r\n          <Card.Text style={{fontSize: \"20px\"}} className=\"ml-3\">\r\n            {lot.isAuction && \"Buy price: \" + lot.buyPrice}\r\n          </Card.Text>\r\n          <Card.Text className=\"ml-3\">\r\n            {lot.location &&\r\n              lot.location.region +\r\n                \" \" +\r\n                lot.location.city +\r\n                \" \" +\r\n                lot.location.street}\r\n          </Card.Text>\r\n        </Coll>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\CountdownTimer.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Services\\CreatePaymentService.tsx",["385","386"],"import React from \"react\";\r\n\r\nimport ConnectionConfig from '../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json'\r\nimport axios from 'axios'\r\nimport { CreatePayment } from \"../../Types/Payment\";\r\n\r\ninterface CreatePaymentServiceProps{\r\n  payment: CreatePayment;\r\n}\r\n\r\nfunction CreatePaymentService(props: CreatePaymentServiceProps): boolean{\r\n  let token = localStorage.getItem(\"token\");\r\n\r\n  axios\r\n  .post(\r\n    `${\r\n      ConnectionConfig.ServerUrl +\r\n      ConnectionConfig.Routes.Payment.CreatePayment\r\n    }`,\r\n    props.payment,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  )\r\n  .then((responce) => {\r\n    var data = responce.data;\r\n    return true;\r\n  })\r\n  .catch((e) => {\r\n    console.log(e);\r\n    alert(e);\r\n  });\r\n  return true;\r\n}\r\n\r\nexport default CreatePaymentService","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Payment\\Services\\GetPaymentToken.tsx",["387"],"import React from \"react\";\r\n\r\nimport ConnectionConfig from \"../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\n\r\nimport axios from \"axios\";\r\n\r\ninterface GetPaymentTokenProps {\r\n  setToken: (arg: string) => void;\r\n}\r\n\r\nfunction GetPaymentToken(props: GetPaymentTokenProps): void {\r\n  let token = localStorage.getItem(\"token\");\r\n\r\n  axios\r\n    .get(\r\n      `${\r\n        ConnectionConfig.ServerUrl +\r\n        ConnectionConfig.Routes.Payment.GetPaymentToken\r\n      }`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    )\r\n    .then((responce) => {\r\n      var data = responce.data;\r\n      //console.log(data)\r\n      if (data != null) {\r\n        props.setToken(data);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      props.setToken(\"\");\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nexport default GetPaymentToken;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\LotViewPage\\Components\\Table\\TableElement.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\useCountdown.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\ExpiredNotice.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\ShowCounter.tsx",["388"],"import DateTimeDisplay from \"./DateTimeDisplay\";\r\n\r\nimport \"./TimeCounter.sass\"\r\n\r\ninterface ShowCounterProps {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n}\r\n\r\nconst ShowCounter = (props: ShowCounterProps) => {\r\n  return (\r\n    <div className=\"show-counter\">\r\n      <label>Time left</label>\r\n      <a className=\"countdown-link\">\r\n      <DateTimeDisplay value={props.days} type={\"d\"} isDanger={props.days <= 1} />\r\n      <p>:</p>\r\n      <DateTimeDisplay value={props.hours} type={\"h\"} isDanger={false} />\r\n      <p>:</p>\r\n      <DateTimeDisplay value={props.minutes} type={\"m\"} isDanger={false} />\r\n      <p>:</p>\r\n      <DateTimeDisplay value={props.seconds} type={\"s\"} isDanger={false} />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowCounter;\r\n","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\TimeCounter\\DateTimeDisplay.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Components\\Types\\RequestResult.ts",[],["389","390"],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\AdminLotList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Services\\LoadAllLotInfoService.tsx",["391"],"import React from \"react\"\r\n\r\nimport axios from \"axios\";\r\nimport { DetailedLot } from \"../../../../Components/Types/Lot\";\r\nimport ConnectionConfig from \"../../../../Assets/jsonData/ConnectionConfig/ConnectionConfig.json\";\r\n\r\ninterface ILoadAllLotInfoServiceProps{\r\n  setLotInfo: (arg: DetailedLot[]) => void;\r\n}\r\n\r\nfunction LoadAllLotInfoService(props: ILoadAllLotInfoServiceProps){\r\n\r\n  axios\r\n    .get(\r\n      `${\r\n        ConnectionConfig.ServerUrl +\r\n        ConnectionConfig.Routes.Lot.GetAll\r\n      }`\r\n    )\r\n    .then((responce) => {\r\n      var data = responce.data;\r\n      //console.log(data)\r\n      if (data != null) {\r\n        props.setLotInfo(data);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nexport default LoadAllLotInfoService","C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Components\\Table\\Tbody.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Components\\Table\\TheaderList.tsx",[],"C:\\Users\\Valentyn\\study\\graduate work\\LandSellingWebsite\\LandSellingClient\\src\\Pages\\LotManagement\\AdminLotListPage\\Components\\Table\\TableElement.tsx",["392","393"],"import React, { useCallback, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Trans } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DetailedLot, UpdateLot } from \"../../../../../Components/Types/Lot\";\r\nimport LinkConfig from \"../../../../../Assets/jsonData/LinkConfig/LinkConfig.json\";\r\n\r\nimport style from \"./TableStyle.module.sass\";\r\n\r\ninterface TableElementProps {\r\n  index: number;\r\n  elementData: DetailedLot;\r\n  isSelected: string;\r\n  setIsSelected: (arg: string) => void;\r\n}\r\n\r\nfunction TableElement(props: TableElementProps) {\r\n  const lot = props.elementData;\r\n\r\n  const [lotData, setLotData] = useState<UpdateLot>({\r\n    ownerId: lot.ownerId,\r\n    status: lot.status,\r\n    header: lot.header,\r\n    description: lot.description,\r\n    buyPrice: lot.buyPrice,\r\n    minBidPrice: lot.minBidPrice,\r\n    minBidStep: lot.minBidStep,\r\n    auctionDuration: lot.auctionDuration,\r\n    isRent: lot.isRent,\r\n    isAuction: lot.isAuction,\r\n    location: lot.location,\r\n  });\r\n\r\n  const handleInputChangeFunction = (event: any) => {\r\n    const { name, value } = event.target;\r\n    console.log(name, value);\r\n    setLotData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleInputChange = useCallback((value: any) => {\r\n    handleInputChangeFunction(value);\r\n  }, []);\r\n\r\n  const Update = () => {\r\n    UpdateLotData({ lotData: lotData, lotId: lot.id });\r\n  };\r\n\r\n  const Delete = () => {\r\n    DeleteLotData({ lotId: lot.id });\r\n  };\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <td>\r\n        {props.elementData && props.elementData.id && (\r\n          <Link\r\n            to={{\r\n              pathname:\r\n                LinkConfig.lot_management.lot + `/${props.elementData.id}`,\r\n              state: { lotId: `${props.elementData.id}` },\r\n            }}\r\n          >\r\n            Lot\r\n          </Link>\r\n        )}\r\n      </td>\r\n      <td>\r\n        {props.elementData && props.elementData.ownerId && (\r\n          <Link\r\n            to={{\r\n              pathname: \"/profile\" + `/${props.elementData.ownerId}`,\r\n              state: { id: `${props.elementData.ownerId}` },\r\n            }}\r\n          >\r\n            Owner\r\n          </Link>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"header\"\r\n          className=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          aria-describedby=\"headerHelp\"\r\n          name=\"header\"\r\n          value={lotData.header}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>{props.elementData.status}</td>\r\n      <td>\r\n        <textarea\r\n          style={{ minHeight: \"8rem\" }}\r\n          className=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          aria-describedby=\"headerHelp\"\r\n          name=\"description\"\r\n          value={lotData.description}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>{props.elementData.views}</td>\r\n      <td>\r\n        {props.elementData.publicationDate\r\n          .substring(0, props.elementData.publicationDate.indexOf(\".\"))\r\n          .replace(\"T\", \" \")}\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"header\"\r\n          className=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          aria-describedby=\"headerHelp\"\r\n          name=\"buyPrice\"\r\n          value={lotData.buyPrice}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"header\"\r\n          className=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          aria-describedby=\"headerHelp\"\r\n          name=\"minBidPrice\"\r\n          value={lotData.minBidPrice}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"header\"\r\n          className=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          aria-describedby=\"headerHelp\"\r\n          name=\"minBidStep\"\r\n          value={lotData.minBidStep}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"header\"\r\n          className=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          aria-describedby=\"headerHelp\"\r\n          name=\"auctionDuration\"\r\n          value={lotData.auctionDuration}\r\n          onChange={(e) => {\r\n            handleInputChange(e);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>{props.elementData.isRent ? \"+\" : \"-\"}</td>\r\n      <td>{props.elementData.isAuction ? \"+\" : \"-\"}</td>\r\n      <td>\r\n        {`${props.elementData.location.region} ${props.elementData.location.city} ${props.elementData.location.house}`}\r\n      </td>\r\n\r\n      <td>\r\n        <Button\r\n          style={\r\n            props.isSelected !== props.elementData.id\r\n              ? { ...{ color: \"white\", backgroundColor: \"#4287f5\" } }\r\n              : { ...{ color: \"#4287f5\", backgroundColor: \"white\" } }\r\n          }\r\n          onClick={() => {\r\n            props.setIsSelected(props.elementData.id);\r\n            Update();\r\n          }}\r\n        >\r\n          <Trans i18nKey=\"Update\">Update</Trans>\r\n        </Button>\r\n      </td>\r\n      <td>\r\n        <Button\r\n          style={\r\n            props.isSelected !== props.elementData.id\r\n              ? { ...{ color: \"white\", backgroundColor: \"#4287f5\" } }\r\n              : { ...{ color: \"#4287f5\", backgroundColor: \"white\" } }\r\n          }\r\n          onClick={() => {\r\n            props.setIsSelected(props.elementData.id);\r\n            Delete();\r\n          }}\r\n        >\r\n          <Trans i18nKey=\"Delete\">Delete</Trans>\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableElement;\r\nfunction UpdateLotData(arg0: { lotData: UpdateLot; lotId: string }) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n\r\nfunction DeleteLotData(arg0: { lotId: string }) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n",{"ruleId":"394","severity":1,"message":"395","line":6,"column":8,"nodeType":"396","messageId":"397","endLine":6,"endColumn":12},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","replacedBy":"401"},{"ruleId":"394","severity":1,"message":"402","line":2,"column":42,"nodeType":"396","messageId":"397","endLine":2,"endColumn":46},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","replacedBy":"401"},{"ruleId":"403","severity":1,"message":"404","line":63,"column":21,"nodeType":"405","endLine":68,"endColumn":22},{"ruleId":"403","severity":1,"message":"404","line":143,"column":21,"nodeType":"405","endLine":148,"endColumn":22},{"ruleId":"403","severity":1,"message":"404","line":170,"column":21,"nodeType":"405","endLine":175,"endColumn":22},{"ruleId":"406","severity":1,"message":"407","line":29,"column":6,"nodeType":"408","endLine":29,"endColumn":8,"suggestions":"409"},{"ruleId":"406","severity":1,"message":"410","line":33,"column":6,"nodeType":"408","endLine":33,"endColumn":8,"suggestions":"411"},{"ruleId":"412","severity":1,"message":"413","line":12,"column":23,"nodeType":"414","messageId":"415","endLine":12,"endColumn":25},{"ruleId":"412","severity":1,"message":"413","line":12,"column":23,"nodeType":"414","messageId":"415","endLine":12,"endColumn":25},{"ruleId":"406","severity":1,"message":"416","line":138,"column":6,"nodeType":"408","endLine":138,"endColumn":25,"suggestions":"417"},{"ruleId":"406","severity":1,"message":"418","line":142,"column":6,"nodeType":"408","endLine":142,"endColumn":16,"suggestions":"419"},{"ruleId":"406","severity":1,"message":"420","line":158,"column":6,"nodeType":"408","endLine":158,"endColumn":8,"suggestions":"421"},{"ruleId":"422","severity":1,"message":"423","line":1,"column":8,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},{"ruleId":"406","severity":1,"message":"424","line":24,"column":6,"nodeType":"408","endLine":24,"endColumn":22,"suggestions":"425"},{"ruleId":"406","severity":1,"message":"426","line":72,"column":6,"nodeType":"408","endLine":72,"endColumn":8,"suggestions":"427"},{"ruleId":"406","severity":1,"message":"428","line":84,"column":6,"nodeType":"408","endLine":84,"endColumn":19,"suggestions":"429"},{"ruleId":"422","severity":1,"message":"430","line":40,"column":21,"nodeType":"396","messageId":"397","endLine":40,"endColumn":33},{"ruleId":"422","severity":1,"message":"431","line":1,"column":10,"nodeType":"396","messageId":"397","endLine":1,"endColumn":21},{"ruleId":"422","severity":1,"message":"432","line":3,"column":10,"nodeType":"396","messageId":"397","endLine":3,"endColumn":17},{"ruleId":"422","severity":1,"message":"433","line":12,"column":11,"nodeType":"396","messageId":"397","endLine":12,"endColumn":22},{"ruleId":"422","severity":1,"message":"423","line":1,"column":8,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},{"ruleId":"422","severity":1,"message":"423","line":1,"column":8,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},{"ruleId":"398","replacedBy":"434"},{"ruleId":"400","replacedBy":"435"},{"ruleId":"436","severity":1,"message":"437","line":55,"column":38,"nodeType":"438","messageId":"439","endLine":55,"endColumn":39},{"ruleId":"422","severity":1,"message":"440","line":2,"column":17,"nodeType":"396","messageId":"397","endLine":2,"endColumn":26},{"ruleId":"422","severity":1,"message":"441","line":2,"column":28,"nodeType":"396","messageId":"397","endLine":2,"endColumn":36},{"ruleId":"436","severity":1,"message":"437","line":72,"column":34,"nodeType":"438","messageId":"439","endLine":72,"endColumn":35},{"ruleId":"422","severity":1,"message":"423","line":1,"column":8,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},{"ruleId":"422","severity":1,"message":"442","line":26,"column":9,"nodeType":"396","messageId":"397","endLine":26,"endColumn":13},{"ruleId":"422","severity":1,"message":"423","line":1,"column":8,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},{"ruleId":"443","severity":1,"message":"444","line":16,"column":7,"nodeType":"405","endLine":16,"endColumn":37},{"ruleId":"398","replacedBy":"445"},{"ruleId":"400","replacedBy":"446"},{"ruleId":"422","severity":1,"message":"423","line":1,"column":8,"nodeType":"396","messageId":"397","endLine":1,"endColumn":13},{"ruleId":"422","severity":1,"message":"447","line":9,"column":8,"nodeType":"396","messageId":"397","endLine":9,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":72,"column":36,"nodeType":"438","messageId":"439","endLine":72,"endColumn":37},"no-unused-vars","'i18n' is defined but never used.","Identifier","unusedVar","no-native-reassign",["448"],"no-negated-in-lhs",["449"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["450"],"React Hook useEffect has a missing dependency: 'payments'. Either include it or remove the dependency array.",["451"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.isNewLot'. Either include it or remove the dependency array.",["452"],"React Hook useEffect has a missing dependency: 'getGeocode'. Either include it or remove the dependency array.",["453"],"React Hook useCallback has missing dependencies: 'props.isNewLot' and 'setLocation'. Either include them or remove the dependency array.",["454"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'afterChartCreated' and 'afterViewsChartCreated'. Either include them or remove the dependency array.",["455"],"React Hook useEffect has missing dependencies: 'props.id' and 'props.isReadOnly'. Either include them or remove the dependency array.",["456"],"React Hook useEffect has missing dependencies: 'fieldsStateCash.email', 'fieldsStateCash.name', 'fieldsStateCash.phoneNumber', and 'fieldsStateCash.surname'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFieldsModifiedState' needs the current value of 'fieldsStateCash.name'.",["457"],"'setAgreement' is assigned a value but never used.","'useCallback' is defined but never used.","'PanTool' is defined but never used.","'setLocation' is assigned a value but never used.",["448"],["449"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["448"],["449"],"'style' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},"Update the dependencies array to be: [params.id]",{"range":"474","text":"475"},"Update the dependencies array to be: [payments]",{"range":"476","text":"477"},"Update the dependencies array to be: [props.isNewLot, props.lotLocation]",{"range":"478","text":"479"},"Update the dependencies array to be: [getGeocode, location]",{"range":"480","text":"481"},"Update the dependencies array to be: [props.isNewLot, setLocation]",{"range":"482","text":"483"},"Update the dependencies array to be: [afterChartCreated, afterViewsChartCreated, props.quantity]",{"range":"484","text":"485"},"Update the dependencies array to be: [props.id, props.isReadOnly]",{"range":"486","text":"487"},"Update the dependencies array to be: [fieldsState, fieldsStateCash.email, fieldsStateCash.name, fieldsStateCash.phoneNumber, fieldsStateCash.surname]",{"range":"488","text":"489"},[938,940],"[params.id]",[1012,1014],"[payments]",[3917,3936],"[props.isNewLot, props.lotLocation]",[3987,3997],"[getGeocode, location]",[4357,4359],"[props.isNewLot, setLocation]",[630,646],"[afterChartCreated, afterViewsChartCreated, props.quantity]",[1900,1902],"[props.id, props.isReadOnly]",[2320,2333],"[fieldsState, fieldsStateCash.email, fieldsStateCash.name, fieldsStateCash.phoneNumber, fieldsStateCash.surname]"]